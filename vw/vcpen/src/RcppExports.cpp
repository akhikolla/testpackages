// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// minque_Rcpp
List minque_Rcpp(arma::vec& y, arma::mat& X, const List& Kerns, arma::vec vc);
RcppExport SEXP _vcpen_minque_Rcpp(SEXP ySEXP, SEXP XSEXP, SEXP KernsSEXP, SEXP vcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const List& >::type Kerns(KernsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vc(vcSEXP);
    rcpp_result_gen = Rcpp::wrap(minque_Rcpp(y, X, Kerns, vc));
    return rcpp_result_gen;
END_RCPP
}
// vcpen_Rcpp
List vcpen_Rcpp(arma::vec& y, arma::mat& X, const List& Kerns, arma::vec lambda_factor, arma::vec lambda_grid, double frac1, arma::vec sigma2_init, int maxiter, bool print_iter);
RcppExport SEXP _vcpen_vcpen_Rcpp(SEXP ySEXP, SEXP XSEXP, SEXP KernsSEXP, SEXP lambda_factorSEXP, SEXP lambda_gridSEXP, SEXP frac1SEXP, SEXP sigma2_initSEXP, SEXP maxiterSEXP, SEXP print_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const List& >::type Kerns(KernsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda_factor(lambda_factorSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda_grid(lambda_gridSEXP);
    Rcpp::traits::input_parameter< double >::type frac1(frac1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma2_init(sigma2_initSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< bool >::type print_iter(print_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(vcpen_Rcpp(y, X, Kerns, lambda_factor, lambda_grid, frac1, sigma2_init, maxiter, print_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_vcpen_minque_Rcpp", (DL_FUNC) &_vcpen_minque_Rcpp, 4},
    {"_vcpen_vcpen_Rcpp", (DL_FUNC) &_vcpen_vcpen_Rcpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_vcpen(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
