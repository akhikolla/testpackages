// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_account
NumericVector calc_account(const NumericVector& spot, const NumericVector& ben, double fee, double barrier, const NumericVector& penalty);
RcppExport SEXP _valuer_calc_account(SEXP spotSEXP, SEXP benSEXP, SEXP feeSEXP, SEXP barrierSEXP, SEXP penaltySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type spot(spotSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ben(benSEXP);
    Rcpp::traits::input_parameter< double >::type fee(feeSEXP);
    Rcpp::traits::input_parameter< double >::type barrier(barrierSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type penalty(penaltySEXP);
    rcpp_result_gen = Rcpp::wrap(calc_account(spot, ben, fee, barrier, penalty));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_valuer_calc_account", (DL_FUNC) &_valuer_calc_account, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_valuer(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
