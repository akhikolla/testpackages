# Generated by roxygen2: do not edit by hand

S3method(plot,summaryDPMMclust)
S3method(print,summaryDPMMclust)
S3method(summary,DPMMclust)
export(DPMGibbsN)
export(DPMGibbsN_SeqPrior)
export(DPMGibbsN_parallel)
export(DPMGibbsSkewN)
export(DPMGibbsSkewN_parallel)
export(DPMGibbsSkewT)
export(DPMGibbsSkewT_SeqPrior)
export(DPMGibbsSkewT_SeqPrior_parallel)
export(DPMGibbsSkewT_parallel)
export(DPMpost)
export(Flimited)
export(FmeasureC)
export(FmeasureC_no0)
export(Fmeasure_costC)
export(MAP_sNiW_mmEM)
export(MAP_sNiW_mmEM_vague)
export(MAP_sNiW_mmEM_weighted)
export(MLE_NiW_mmEM)
export(MLE_gamma)
export(MLE_sNiW)
export(MLE_sNiW_mmEM)
export(NuMatParC)
export(burn.DPMMclust)
export(cluster_est_Fmeasure)
export(cluster_est_Mbinder_norm)
export(cluster_est_binder)
export(cluster_est_pear)
export(cytoScatter)
export(evalClustLoss)
export(invwishrnd)
export(lgamma_mv)
export(mmNiWpdf)
export(mmNiWpdfC)
export(mmsNiWlogpdf)
export(mmsNiWpdfC)
export(mmvnpdfC)
export(mmvsnpdfC)
export(mmvstpdfC)
export(mmvtpdfC)
export(mvnpdf)
export(mvnpdfC)
export(mvsnpdf)
export(mvstpdf)
export(mvtpdf)
export(plot_ConvDPM)
export(plot_DPM)
export(plot_DPMsn)
export(plot_DPMst)
export(postProcess.DPMMclust)
export(priormix)
export(rCRP)
export(rNNiW)
export(rNiW)
export(sampleClassC)
export(sample_alpha)
export(similarityMat)
export(similarityMatC)
export(similarityMat_nocostC)
export(traceEpsC)
export(update_SS)
export(update_SSsn)
export(update_SSst)
export(vclust2mcoclustC)
export(wishrnd)
import(ellipse)
import(ggplot2)
import(reshape2)
importFrom(Rcpp,evalCpp)
importFrom(fastcluster,hclust)
importFrom(grDevices,colorRampPalette)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(pheatmap,pheatmap)
importFrom(stats,cov)
importFrom(stats,cov2cor)
importFrom(stats,dgamma)
importFrom(stats,dist)
importFrom(stats,dnorm)
importFrom(stats,pnorm)
importFrom(stats,pt)
importFrom(stats,rbeta)
importFrom(stats,rgamma)
importFrom(stats,rmultinom)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,uniroot)
importFrom(stats,var)
importFrom(truncnorm,rtruncnorm)
useDynLib(NPflow, .registration = TRUE)
