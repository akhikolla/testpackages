// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sum_compute_single_rcpp
Rcpp::List sum_compute_single_rcpp(const arma::vec& y, const arma::vec& start_beta, const arma::vec& ytx, const arma::mat& XtX_reduce, const double& lambda, const double& alpha, const arma::vec& xtx, unsigned int& i_iter);
RcppExport SEXP _PO_EN_sum_compute_single_rcpp(SEXP ySEXP, SEXP start_betaSEXP, SEXP ytxSEXP, SEXP XtX_reduceSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP xtxSEXP, SEXP i_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type start_beta(start_betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ytx(ytxSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XtX_reduce(XtX_reduceSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xtx(xtxSEXP);
    Rcpp::traits::input_parameter< unsigned int& >::type i_iter(i_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_compute_single_rcpp(y, start_beta, ytx, XtX_reduce, lambda, alpha, xtx, i_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PO_EN_sum_compute_single_rcpp", (DL_FUNC) &_PO_EN_sum_compute_single_rcpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_PO_EN(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
