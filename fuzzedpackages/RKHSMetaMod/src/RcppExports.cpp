// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// RKHSMetMod
SEXP RKHSMetMod(NumericVector Y, NumericMatrix X, String kernel, int Dmax, NumericVector gamma, NumericVector frc, bool verbose);
RcppExport SEXP _RKHSMetaMod_RKHSMetMod(SEXP YSEXP, SEXP XSEXP, SEXP kernelSEXP, SEXP DmaxSEXP, SEXP gammaSEXP, SEXP frcSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< String >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< int >::type Dmax(DmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type frc(frcSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(RKHSMetMod(Y, X, kernel, Dmax, gamma, frc, verbose));
    return rcpp_result_gen;
END_RCPP
}
// RKHSMetMod_qmax
SEXP RKHSMetMod_qmax(NumericVector Y, NumericMatrix X, String kernel, int Dmax, NumericVector gamma, int qmax, double rat, int Num, bool verbose);
RcppExport SEXP _RKHSMetaMod_RKHSMetMod_qmax(SEXP YSEXP, SEXP XSEXP, SEXP kernelSEXP, SEXP DmaxSEXP, SEXP gammaSEXP, SEXP qmaxSEXP, SEXP ratSEXP, SEXP NumSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< String >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< int >::type Dmax(DmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type qmax(qmaxSEXP);
    Rcpp::traits::input_parameter< double >::type rat(ratSEXP);
    Rcpp::traits::input_parameter< int >::type Num(NumSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(RKHSMetMod_qmax(Y, X, kernel, Dmax, gamma, qmax, rat, Num, verbose));
    return rcpp_result_gen;
END_RCPP
}
// PredErr
NumericMatrix PredErr(NumericMatrix X, NumericMatrix XT, NumericVector YT, NumericVector mu, NumericVector gamma, List res, String kernel, int Dmax);
RcppExport SEXP _RKHSMetaMod_PredErr(SEXP XSEXP, SEXP XTSEXP, SEXP YTSEXP, SEXP muSEXP, SEXP gammaSEXP, SEXP resSEXP, SEXP kernelSEXP, SEXP DmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type XT(XTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type YT(YTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< List >::type res(resSEXP);
    Rcpp::traits::input_parameter< String >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< int >::type Dmax(DmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(PredErr(X, XT, YT, mu, gamma, res, kernel, Dmax));
    return rcpp_result_gen;
END_RCPP
}
// grplasso_q
SEXP grplasso_q(NumericVector Y, List Kv, int q, double rat, int Num);
RcppExport SEXP _RKHSMetaMod_grplasso_q(SEXP YSEXP, SEXP KvSEXP, SEXP qSEXP, SEXP ratSEXP, SEXP NumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type Kv(KvSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type rat(ratSEXP);
    Rcpp::traits::input_parameter< int >::type Num(NumSEXP);
    rcpp_result_gen = Rcpp::wrap(grplasso_q(Y, Kv, q, rat, Num));
    return rcpp_result_gen;
END_RCPP
}
// calc_Kv
SEXP calc_Kv(NumericMatrix X, String kernel, int Dmax, bool correction, bool verbose, double tol);
RcppExport SEXP _RKHSMetaMod_calc_Kv(SEXP XSEXP, SEXP kernelSEXP, SEXP DmaxSEXP, SEXP correctionSEXP, SEXP verboseSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< String >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< int >::type Dmax(DmaxSEXP);
    Rcpp::traits::input_parameter< bool >::type correction(correctionSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_Kv(X, kernel, Dmax, correction, verbose, tol));
    return rcpp_result_gen;
END_RCPP
}
// RKHSgrplasso
SEXP RKHSgrplasso(NumericVector Y, List Kv, double mu, int maxIter, bool verbose);
RcppExport SEXP _RKHSMetaMod_RKHSgrplasso(SEXP YSEXP, SEXP KvSEXP, SEXP muSEXP, SEXP maxIterSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type Kv(KvSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(RKHSgrplasso(Y, Kv, mu, maxIter, verbose));
    return rcpp_result_gen;
END_RCPP
}
// grplasso
SEXP grplasso(NumericVector Y, List Kv, List k_v, double mu, int maxIter, double eps, bool verbose);
RcppExport SEXP _RKHSMetaMod_grplasso(SEXP YSEXP, SEXP KvSEXP, SEXP k_vSEXP, SEXP muSEXP, SEXP maxIterSEXP, SEXP epsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type Kv(KvSEXP);
    Rcpp::traits::input_parameter< List >::type k_v(k_vSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(grplasso(Y, Kv, k_v, mu, maxIter, eps, verbose));
    return rcpp_result_gen;
END_RCPP
}
// mu_max
double mu_max(NumericVector Y, List matZ);
RcppExport SEXP _RKHSMetaMod_mu_max(SEXP YSEXP, SEXP matZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type matZ(matZSEXP);
    rcpp_result_gen = Rcpp::wrap(mu_max(Y, matZ));
    return rcpp_result_gen;
END_RCPP
}
// pen_MetMod
SEXP pen_MetMod(NumericVector Y, List Kv, NumericVector gamma, NumericVector mu, List resg, NumericVector gama_v, NumericVector mu_v, int maxIter, bool verbose, bool calcStwo);
RcppExport SEXP _RKHSMetaMod_pen_MetMod(SEXP YSEXP, SEXP KvSEXP, SEXP gammaSEXP, SEXP muSEXP, SEXP resgSEXP, SEXP gama_vSEXP, SEXP mu_vSEXP, SEXP maxIterSEXP, SEXP verboseSEXP, SEXP calcStwoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type Kv(KvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< List >::type resg(resgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gama_v(gama_vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu_v(mu_vSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< bool >::type calcStwo(calcStwoSEXP);
    rcpp_result_gen = Rcpp::wrap(pen_MetMod(Y, Kv, gamma, mu, resg, gama_v, mu_v, maxIter, verbose, calcStwo));
    return rcpp_result_gen;
END_RCPP
}
// penMetaMod_cpp
SEXP penMetaMod_cpp(NumericVector Y, List matZ, List k_v, StringVector namG, List resg, NumericVector gamma, NumericVector mu, NumericVector gama_v, NumericVector mu_v, int maxIter, bool verbose, bool calcStwo);
RcppExport SEXP _RKHSMetaMod_penMetaMod_cpp(SEXP YSEXP, SEXP matZSEXP, SEXP k_vSEXP, SEXP namGSEXP, SEXP resgSEXP, SEXP gammaSEXP, SEXP muSEXP, SEXP gama_vSEXP, SEXP mu_vSEXP, SEXP maxIterSEXP, SEXP verboseSEXP, SEXP calcStwoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< List >::type matZ(matZSEXP);
    Rcpp::traits::input_parameter< List >::type k_v(k_vSEXP);
    Rcpp::traits::input_parameter< StringVector >::type namG(namGSEXP);
    Rcpp::traits::input_parameter< List >::type resg(resgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gama_v(gama_vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu_v(mu_vSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< bool >::type calcStwo(calcStwoSEXP);
    rcpp_result_gen = Rcpp::wrap(penMetaMod_cpp(Y, matZ, k_v, namG, resg, gamma, mu, gama_v, mu_v, maxIter, verbose, calcStwo));
    return rcpp_result_gen;
END_RCPP
}
