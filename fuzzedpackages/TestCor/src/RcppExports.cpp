// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// vectorize
NumericVector vectorize(const NumericMatrix& mat);
RcppExport SEXP _TestCor_vectorize(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(vectorize(mat));
    return rcpp_result_gen;
END_RCPP
}
// unvectorize
NumericMatrix unvectorize(const NumericVector& vect);
RcppExport SEXP _TestCor_unvectorize(SEXP vectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type vect(vectSEXP);
    rcpp_result_gen = Rcpp::wrap(unvectorize(vect));
    return rcpp_result_gen;
END_RCPP
}
// covDcor
NumericMatrix covDcor(const NumericMatrix& r);
RcppExport SEXP _TestCor_covDcor(SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(covDcor(r));
    return rcpp_result_gen;
END_RCPP
}
// covD2nd
Rcpp::NumericMatrix covD2nd(const Rcpp::NumericMatrix& r);
RcppExport SEXP _TestCor_covD2nd(SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(covD2nd(r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TestCor_vectorize", (DL_FUNC) &_TestCor_vectorize, 1},
    {"_TestCor_unvectorize", (DL_FUNC) &_TestCor_unvectorize, 1},
    {"_TestCor_covDcor", (DL_FUNC) &_TestCor_covDcor, 1},
    {"_TestCor_covD2nd", (DL_FUNC) &_TestCor_covD2nd, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_TestCor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
