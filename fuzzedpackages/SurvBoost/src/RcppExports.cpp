// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// boosting_stratify_core
arma::mat boosting_stratify_core(arma::vec& sample, arma::vec& delta, arma::vec& facility, int& num_facility, arma::mat& X, int& M_stop, double& rate, int adj_variables);
RcppExport SEXP _SurvBoost_boosting_stratify_core(SEXP sampleSEXP, SEXP deltaSEXP, SEXP facilitySEXP, SEXP num_facilitySEXP, SEXP XSEXP, SEXP M_stopSEXP, SEXP rateSEXP, SEXP adj_variablesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< int& >::type num_facility(num_facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int& >::type M_stop(M_stopSEXP);
    Rcpp::traits::input_parameter< double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    rcpp_result_gen = Rcpp::wrap(boosting_stratify_core(sample, delta, facility, num_facility, X, M_stop, rate, adj_variables));
    return rcpp_result_gen;
END_RCPP
}
// boosting_stratify_path
arma::mat boosting_stratify_path(arma::vec& sample, arma::vec& delta, arma::vec& facility, int& num_facility, arma::mat& X, int& M_stop, double& rate, int adj_variables);
RcppExport SEXP _SurvBoost_boosting_stratify_path(SEXP sampleSEXP, SEXP deltaSEXP, SEXP facilitySEXP, SEXP num_facilitySEXP, SEXP XSEXP, SEXP M_stopSEXP, SEXP rateSEXP, SEXP adj_variablesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< int& >::type num_facility(num_facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int& >::type M_stop(M_stopSEXP);
    Rcpp::traits::input_parameter< double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    rcpp_result_gen = Rcpp::wrap(boosting_stratify_path(sample, delta, facility, num_facility, X, M_stop, rate, adj_variables));
    return rcpp_result_gen;
END_RCPP
}
// boosting_stratify_numselected1
Rcpp::List boosting_stratify_numselected1(arma::vec& sample, arma::vec& delta, arma::vec& facility, int& num_facility, arma::mat& X, double& num_selected, double& rate, int adj_variables);
RcppExport SEXP _SurvBoost_boosting_stratify_numselected1(SEXP sampleSEXP, SEXP deltaSEXP, SEXP facilitySEXP, SEXP num_facilitySEXP, SEXP XSEXP, SEXP num_selectedSEXP, SEXP rateSEXP, SEXP adj_variablesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< int& >::type num_facility(num_facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double& >::type num_selected(num_selectedSEXP);
    Rcpp::traits::input_parameter< double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    rcpp_result_gen = Rcpp::wrap(boosting_stratify_numselected1(sample, delta, facility, num_facility, X, num_selected, rate, adj_variables));
    return rcpp_result_gen;
END_RCPP
}
// boosting_stratify_likelihood1
Rcpp::List boosting_stratify_likelihood1(arma::vec& sample, arma::vec& delta, arma::vec& facility, int& num_facility, arma::mat& X, double& rate, double delta_likelihood, int adj_variables);
RcppExport SEXP _SurvBoost_boosting_stratify_likelihood1(SEXP sampleSEXP, SEXP deltaSEXP, SEXP facilitySEXP, SEXP num_facilitySEXP, SEXP XSEXP, SEXP rateSEXP, SEXP delta_likelihoodSEXP, SEXP adj_variablesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< int& >::type num_facility(num_facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< double >::type delta_likelihood(delta_likelihoodSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    rcpp_result_gen = Rcpp::wrap(boosting_stratify_likelihood1(sample, delta, facility, num_facility, X, rate, delta_likelihood, adj_variables));
    return rcpp_result_gen;
END_RCPP
}
// boosting_stratify_BIC1
Rcpp::List boosting_stratify_BIC1(arma::vec& sample, arma::vec& delta, arma::vec& facility, int& num_facility, arma::mat& X, double& rate, bool& early_stop, int adj_variables, double gamma, bool aic);
RcppExport SEXP _SurvBoost_boosting_stratify_BIC1(SEXP sampleSEXP, SEXP deltaSEXP, SEXP facilitySEXP, SEXP num_facilitySEXP, SEXP XSEXP, SEXP rateSEXP, SEXP early_stopSEXP, SEXP adj_variablesSEXP, SEXP gammaSEXP, SEXP aicSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< int& >::type num_facility(num_facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< bool& >::type early_stop(early_stopSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< bool >::type aic(aicSEXP);
    rcpp_result_gen = Rcpp::wrap(boosting_stratify_BIC1(sample, delta, facility, num_facility, X, rate, early_stop, adj_variables, gamma, aic));
    return rcpp_result_gen;
END_RCPP
}
// cross_validation_func_update
Rcpp::List cross_validation_func_update(int K, arma::vec time, arma::vec delta, arma::mat z, arma::vec facility, double rate, int track, int M_stop, int adj_variables);
RcppExport SEXP _SurvBoost_cross_validation_func_update(SEXP KSEXP, SEXP timeSEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP facilitySEXP, SEXP rateSEXP, SEXP trackSEXP, SEXP M_stopSEXP, SEXP adj_variablesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< int >::type track(trackSEXP);
    Rcpp::traits::input_parameter< int >::type M_stop(M_stopSEXP);
    Rcpp::traits::input_parameter< int >::type adj_variables(adj_variablesSEXP);
    rcpp_result_gen = Rcpp::wrap(cross_validation_func_update(K, time, delta, z, facility, rate, track, M_stop, adj_variables));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SurvBoost_boosting_stratify_core", (DL_FUNC) &_SurvBoost_boosting_stratify_core, 8},
    {"_SurvBoost_boosting_stratify_path", (DL_FUNC) &_SurvBoost_boosting_stratify_path, 8},
    {"_SurvBoost_boosting_stratify_numselected1", (DL_FUNC) &_SurvBoost_boosting_stratify_numselected1, 8},
    {"_SurvBoost_boosting_stratify_likelihood1", (DL_FUNC) &_SurvBoost_boosting_stratify_likelihood1, 8},
    {"_SurvBoost_boosting_stratify_BIC1", (DL_FUNC) &_SurvBoost_boosting_stratify_BIC1, 10},
    {"_SurvBoost_cross_validation_func_update", (DL_FUNC) &_SurvBoost_cross_validation_func_update, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_SurvBoost(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
