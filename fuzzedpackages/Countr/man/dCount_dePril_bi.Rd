% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{dCount_dePril_bi}
\alias{dCount_dePril_bi}
\alias{dCount_dePril_user}
\title{Compute count probabilities using dePril convolution (bi)}
\usage{
dCount_dePril_bi(x, distPars, dist, nsteps = 100L, time = 1,
  extrap = TRUE, cdfout = FALSE, logFlag = FALSE)

dCount_dePril_user(x, distPars, extrapolPars, survR, nsteps = 100L,
  time = 1, extrap = TRUE, cdfout = FALSE, logFlag = FALSE)
}
\arguments{
\item{survR}{Rcpp::Function user passed survival function; should have the
signature \code{function(t, distPars)} where \code{t} is a real number (>0)
where the survival function is evaluated and \code{distPars} is a list of
distribution parameters. It should return a double value.}

\item{inheritParams}{dCount_naive_bi}
}
\value{
vector of probabilities P(x(i)) for i = 1, ..., n where n is
\code{length} of \code{x}.
}
\description{
Compute count probabilities using dePril convolution (section 3.2) for the
built-in distributions

Compute count probabilities using dePril convolution (section 3.2) for the
user passed survival function.
}
\details{
The routine does minimum number of convolution using dePril trick
to compute the count
probability P(x) sing \code{nsteps} steps, and refines result by
Richardson extrapolation if \code{extrap} is \code{TRUE} using the
algorithm of section 3.2.
}
\keyword{internal}
