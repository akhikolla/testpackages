// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Pijavski
SEXP Pijavski(SEXP fn, SEXP Lips, SEXP x1, SEXP x2, SEXP iter, SEXP prec, SEXP rho);
RcppExport SEXP _Pijavski_Pijavski(SEXP fnSEXP, SEXP LipsSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP iterSEXP, SEXP precSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type fn(fnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Lips(LipsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type prec(precSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(Pijavski(fn, Lips, x1, x2, iter, prec, rho));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Pijavski_Pijavski", (DL_FUNC) &_Pijavski_Pijavski, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_Pijavski(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
