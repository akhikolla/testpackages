// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// MCPModFitDRModels
List MCPModFitDRModels(const int& endpoint_index_arg, const IntegerVector& selected_models_arg, const NumericVector& x_arg, const NumericVector& y_arg, const double& delta_arg, const double& direction_index_arg, const int& maxit_arg, const NumericVector& theta_vector_arg);
RcppExport SEXP _MCPModPack_MCPModFitDRModels(SEXP endpoint_index_argSEXP, SEXP selected_models_argSEXP, SEXP x_argSEXP, SEXP y_argSEXP, SEXP delta_argSEXP, SEXP direction_index_argSEXP, SEXP maxit_argSEXP, SEXP theta_vector_argSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type endpoint_index_arg(endpoint_index_argSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type selected_models_arg(selected_models_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type x_arg(x_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type y_arg(y_argSEXP);
    Rcpp::traits::input_parameter< const double& >::type delta_arg(delta_argSEXP);
    Rcpp::traits::input_parameter< const double& >::type direction_index_arg(direction_index_argSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxit_arg(maxit_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type theta_vector_arg(theta_vector_argSEXP);
    rcpp_result_gen = Rcpp::wrap(MCPModFitDRModels(endpoint_index_arg, selected_models_arg, x_arg, y_arg, delta_arg, direction_index_arg, maxit_arg, theta_vector_arg));
    return rcpp_result_gen;
END_RCPP
}
// MCPModRunSimulations
List MCPModRunSimulations(const int& endpoint_index_arg, const IntegerVector& selected_models_arg, const NumericVector& theta_arg, const NumericVector& theta_vector_arg, const double& delta_arg, const int& model_selection_index_arg, const List& opt_contrast_arg, const NumericVector& crit_value_arg, const List& sim_parameter_list_arg, const List& sim_model_list_arg, const double& direction_index_arg, const double& go_threshold_arg, const int& n_points_arg, const int& maxit_arg);
RcppExport SEXP _MCPModPack_MCPModRunSimulations(SEXP endpoint_index_argSEXP, SEXP selected_models_argSEXP, SEXP theta_argSEXP, SEXP theta_vector_argSEXP, SEXP delta_argSEXP, SEXP model_selection_index_argSEXP, SEXP opt_contrast_argSEXP, SEXP crit_value_argSEXP, SEXP sim_parameter_list_argSEXP, SEXP sim_model_list_argSEXP, SEXP direction_index_argSEXP, SEXP go_threshold_argSEXP, SEXP n_points_argSEXP, SEXP maxit_argSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type endpoint_index_arg(endpoint_index_argSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type selected_models_arg(selected_models_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type theta_arg(theta_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type theta_vector_arg(theta_vector_argSEXP);
    Rcpp::traits::input_parameter< const double& >::type delta_arg(delta_argSEXP);
    Rcpp::traits::input_parameter< const int& >::type model_selection_index_arg(model_selection_index_argSEXP);
    Rcpp::traits::input_parameter< const List& >::type opt_contrast_arg(opt_contrast_argSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type crit_value_arg(crit_value_argSEXP);
    Rcpp::traits::input_parameter< const List& >::type sim_parameter_list_arg(sim_parameter_list_argSEXP);
    Rcpp::traits::input_parameter< const List& >::type sim_model_list_arg(sim_model_list_argSEXP);
    Rcpp::traits::input_parameter< const double& >::type direction_index_arg(direction_index_argSEXP);
    Rcpp::traits::input_parameter< const double& >::type go_threshold_arg(go_threshold_argSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_points_arg(n_points_argSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxit_arg(maxit_argSEXP);
    rcpp_result_gen = Rcpp::wrap(MCPModRunSimulations(endpoint_index_arg, selected_models_arg, theta_arg, theta_vector_arg, delta_arg, model_selection_index_arg, opt_contrast_arg, crit_value_arg, sim_parameter_list_arg, sim_model_list_arg, direction_index_arg, go_threshold_arg, n_points_arg, maxit_arg));
    return rcpp_result_gen;
END_RCPP
}
// TestDoseResponseFunction
double TestDoseResponseFunction(const double& x, const double& model, const NumericVector& coef);
RcppExport SEXP _MCPModPack_TestDoseResponseFunction(SEXP xSEXP, SEXP modelSEXP, SEXP coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type coef(coefSEXP);
    rcpp_result_gen = Rcpp::wrap(TestDoseResponseFunction(x, model, coef));
    return rcpp_result_gen;
END_RCPP
}
// TestFindTargetDose
double TestFindTargetDose(const double& delta, const int& model, const NumericVector& coef);
RcppExport SEXP _MCPModPack_TestFindTargetDose(SEXP deltaSEXP, SEXP modelSEXP, SEXP coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const int& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type coef(coefSEXP);
    rcpp_result_gen = Rcpp::wrap(TestFindTargetDose(delta, model, coef));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MCPModPack_MCPModFitDRModels", (DL_FUNC) &_MCPModPack_MCPModFitDRModels, 8},
    {"_MCPModPack_MCPModRunSimulations", (DL_FUNC) &_MCPModPack_MCPModRunSimulations, 14},
    {"_MCPModPack_TestDoseResponseFunction", (DL_FUNC) &_MCPModPack_TestDoseResponseFunction, 3},
    {"_MCPModPack_TestFindTargetDose", (DL_FUNC) &_MCPModPack_TestFindTargetDose, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MCPModPack(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
