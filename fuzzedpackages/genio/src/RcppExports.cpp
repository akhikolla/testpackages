// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_bed_cpp
IntegerMatrix read_bed_cpp(const char* file, int m_loci, int n_ind);
RcppExport SEXP _genio_read_bed_cpp(SEXP fileSEXP, SEXP m_lociSEXP, SEXP n_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type file(fileSEXP);
    Rcpp::traits::input_parameter< int >::type m_loci(m_lociSEXP);
    Rcpp::traits::input_parameter< int >::type n_ind(n_indSEXP);
    rcpp_result_gen = Rcpp::wrap(read_bed_cpp(file, m_loci, n_ind));
    return rcpp_result_gen;
END_RCPP
}
// write_bed_cpp
void write_bed_cpp(const char* file, IntegerMatrix X);
RcppExport SEXP _genio_write_bed_cpp(SEXP fileSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type file(fileSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type X(XSEXP);
    write_bed_cpp(file, X);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_genio_read_bed_cpp", (DL_FUNC) &_genio_read_bed_cpp, 3},
    {"_genio_write_bed_cpp", (DL_FUNC) &_genio_write_bed_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_genio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
