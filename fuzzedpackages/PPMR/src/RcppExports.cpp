// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// PMR_summary
SEXP PMR_summary(SEXP betaxin, SEXP betayin, SEXP Sigma1sin, SEXP Sigma2sin, SEXP samplen1, SEXP samplen2, SEXP gammain, SEXP alphain, SEXP max_iterin, SEXP epsin);
RcppExport SEXP _PPMR_PMR_summary(SEXP betaxinSEXP, SEXP betayinSEXP, SEXP Sigma1sinSEXP, SEXP Sigma2sinSEXP, SEXP samplen1SEXP, SEXP samplen2SEXP, SEXP gammainSEXP, SEXP alphainSEXP, SEXP max_iterinSEXP, SEXP epsinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type betaxin(betaxinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type betayin(betayinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Sigma1sin(Sigma1sinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Sigma2sin(Sigma2sinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type samplen1(samplen1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type samplen2(samplen2SEXP);
    Rcpp::traits::input_parameter< SEXP >::type gammain(gammainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type alphain(alphainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iterin(max_iterinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type epsin(epsinSEXP);
    rcpp_result_gen = Rcpp::wrap(PMR_summary(betaxin, betayin, Sigma1sin, Sigma2sin, samplen1, samplen2, gammain, alphain, max_iterin, epsin));
    return rcpp_result_gen;
END_RCPP
}
// PMR_individual
SEXP PMR_individual(SEXP yin, SEXP zin, SEXP x1in, SEXP x2in, SEXP gammain, SEXP alphain, SEXP max_iterin, SEXP epsin);
RcppExport SEXP _PPMR_PMR_individual(SEXP yinSEXP, SEXP zinSEXP, SEXP x1inSEXP, SEXP x2inSEXP, SEXP gammainSEXP, SEXP alphainSEXP, SEXP max_iterinSEXP, SEXP epsinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type zin(zinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x1in(x1inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x2in(x2inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type gammain(gammainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type alphain(alphainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iterin(max_iterinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type epsin(epsinSEXP);
    rcpp_result_gen = Rcpp::wrap(PMR_individual(yin, zin, x1in, x2in, gammain, alphain, max_iterin, epsin));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PPMR_PMR_summary", (DL_FUNC) &_PPMR_PMR_summary, 10},
    {"_PPMR_PMR_individual", (DL_FUNC) &_PPMR_PMR_individual, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_PPMR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
