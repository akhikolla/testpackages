// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calSim
arma::mat calSim(arma::mat mat);
RcppExport SEXP _BCSub_calSim(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(calSim(mat));
    return rcpp_result_gen;
END_RCPP
}
// mvrnormArma
arma::mat mvrnormArma(int n, arma::vec mu, arma::mat sigma);
RcppExport SEXP _BCSub_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// samLamV3Cpp
arma::mat samLamV3Cpp(arma::mat A, arma::mat eta, arma::vec sig, double sigl, arma::mat lam);
RcppExport SEXP _BCSub_samLamV3Cpp(SEXP ASEXP, SEXP etaSEXP, SEXP sigSEXP, SEXP siglSEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< double >::type sigl(siglSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(samLamV3Cpp(A, eta, sig, sigl, lam));
    return rcpp_result_gen;
END_RCPP
}
// dmvnrm_arma
arma::vec dmvnrm_arma(arma::mat x, arma::rowvec mean, arma::mat sigma, bool logd);
RcppExport SEXP _BCSub_dmvnrm_arma(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// myfind
arma::uvec myfind(IntegerVector evec, int e);
RcppExport SEXP _BCSub_myfind(SEXP evecSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type evec(evecSEXP);
    Rcpp::traits::input_parameter< int >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(myfind(evec, e));
    return rcpp_result_gen;
END_RCPP
}
// polyurncpp
IntegerVector polyurncpp(IntegerVector e, arma::vec muA0, arma::mat sigma0, arma::mat A, arma::mat sigma, arma::mat sigmaInv, arma::mat sigma0Inv, double c);
RcppExport SEXP _BCSub_polyurncpp(SEXP eSEXP, SEXP muA0SEXP, SEXP sigma0SEXP, SEXP ASEXP, SEXP sigmaSEXP, SEXP sigmaInvSEXP, SEXP sigma0InvSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type e(eSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type muA0(muA0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma0(sigma0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigmaInv(sigmaInvSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma0Inv(sigma0InvSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(polyurncpp(e, muA0, sigma0, A, sigma, sigmaInv, sigma0Inv, c));
    return rcpp_result_gen;
END_RCPP
}
