useDynLib(treeducken, .registration=TRUE)
exportPattern("^[[:alpha:]]+")
importFrom(Rcpp, evalCpp)
importFrom("utils", "str")
import("ape")
importFrom("graphics", "curve", "lines", "par", "plot.new",
           "plot.window", "points", "rect", "segments", "strheight",
            "strwidth", "text")
importFrom("methods", "hasArg")
importFrom("stats", "plogis")
S3method("[", multiCophy)
S3method("[<-", multiCophy)
S3method("[[", multiCophy)
S3method("[[<-", multiCophy)
S3method("$", multiCophy)
S3method("$<-", multiCophy)
S3method(c, multiCophy)
S3method(host_tree, multiCophy)
S3method(symb_tree, multiCophy)
S3method(association_mat, multiCophy)
S3method(event_history, multiCophy)
S3method(print, multiCophy)
S3method(str, multiCophy)
S3method(plot, multiCophy)

S3method(c, cophy)

S3method(host_tree, cophy)
S3method(symb_tree, cophy)
S3method(association_mat, cophy)
S3method(event_history, cophy)
S3method(print, cophy)
S3method(summary, cophy)
S3method(plot, cophy)
