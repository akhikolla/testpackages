// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// theta
double theta(arma::vec p, int size, double type);
RcppExport SEXP _binGroup2_theta(SEXP pSEXP, SEXP sizeSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< double >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(theta(p, size, type));
    return rcpp_result_gen;
END_RCPP
}
// eff_nomaster_1
double eff_nomaster_1(arma::vec p, arma::vec SE, arma::vec SP, int n);
RcppExport SEXP _binGroup2_eff_nomaster_1(SEXP pSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::vec >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eff_nomaster_1(p, SE, SP, n));
    return rcpp_result_gen;
END_RCPP
}
// eff_nomaster_2
double eff_nomaster_2(arma::vec p, arma::vec SE, arma::vec SP, int n);
RcppExport SEXP _binGroup2_eff_nomaster_2(SEXP pSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::vec >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(eff_nomaster_2(p, SE, SP, n));
    return rcpp_result_gen;
END_RCPP
}
// ARRAY_nomaster
List ARRAY_nomaster(arma::vec p, arma::mat SE, arma::mat SP, double n);
RcppExport SEXP _binGroup2_ARRAY_nomaster(SEXP pSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ARRAY_nomaster(p, SE, SP, n));
    return rcpp_result_gen;
END_RCPP
}
// ARRAY_master
List ARRAY_master(arma::vec p, arma::mat SE, arma::mat SP, double n);
RcppExport SEXP _binGroup2_ARRAY_master(SEXP pSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ARRAY_master(p, SE, SP, n));
    return rcpp_result_gen;
END_RCPP
}
// EFF_HIER
double EFF_HIER(arma::vec p, int S, arma::mat SE, arma::mat SP, arma::vec ns);
RcppExport SEXP _binGroup2_EFF_HIER(SEXP pSEXP, SEXP SSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ns(nsSEXP);
    rcpp_result_gen = Rcpp::wrap(EFF_HIER(p, S, SE, SP, ns));
    return rcpp_result_gen;
END_RCPP
}
// prob
arma::mat prob(arma::vec p, int S, arma::mat SE, arma::mat SP, arma::vec ns);
RcppExport SEXP _binGroup2_prob(SEXP pSEXP, SEXP SSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ns(nsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob(p, S, SE, SP, ns));
    return rcpp_result_gen;
END_RCPP
}
// ACCU_HIER
List ACCU_HIER(arma::vec p, int S, arma::mat SE, arma::mat SP, arma::vec ns);
RcppExport SEXP _binGroup2_ACCU_HIER(SEXP pSEXP, SEXP SSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP nsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ns(nsSEXP);
    rcpp_result_gen = Rcpp::wrap(ACCU_HIER(p, S, SE, SP, ns));
    return rcpp_result_gen;
END_RCPP
}
// OPT
List OPT(arma::vec p, arma::mat SE, arma::mat SP, int MAMPS, std::string obj, std::string algorithm);
RcppExport SEXP _binGroup2_OPT(SEXP pSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP MAMPSSEXP, SEXP objSEXP, SEXP algorithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< int >::type MAMPS(MAMPSSEXP);
    Rcpp::traits::input_parameter< std::string >::type obj(objSEXP);
    Rcpp::traits::input_parameter< std::string >::type algorithm(algorithmSEXP);
    rcpp_result_gen = Rcpp::wrap(OPT(p, SE, SP, MAMPS, obj, algorithm));
    return rcpp_result_gen;
END_RCPP
}
// optimal_stage
List optimal_stage(double rho, arma::mat SE, arma::mat SP, arma::vec pi1, arma::vec pi2, int MAMPS, std::string obj, std::string algorithm);
RcppExport SEXP _binGroup2_optimal_stage(SEXP rhoSEXP, SEXP SESEXP, SEXP SPSEXP, SEXP pi1SEXP, SEXP pi2SEXP, SEXP MAMPSSEXP, SEXP objSEXP, SEXP algorithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SE(SESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi1(pi1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi2(pi2SEXP);
    Rcpp::traits::input_parameter< int >::type MAMPS(MAMPSSEXP);
    Rcpp::traits::input_parameter< std::string >::type obj(objSEXP);
    Rcpp::traits::input_parameter< std::string >::type algorithm(algorithmSEXP);
    rcpp_result_gen = Rcpp::wrap(optimal_stage(rho, SE, SP, pi1, pi2, MAMPS, obj, algorithm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_binGroup2_theta", (DL_FUNC) &_binGroup2_theta, 3},
    {"_binGroup2_eff_nomaster_1", (DL_FUNC) &_binGroup2_eff_nomaster_1, 4},
    {"_binGroup2_eff_nomaster_2", (DL_FUNC) &_binGroup2_eff_nomaster_2, 4},
    {"_binGroup2_ARRAY_nomaster", (DL_FUNC) &_binGroup2_ARRAY_nomaster, 4},
    {"_binGroup2_ARRAY_master", (DL_FUNC) &_binGroup2_ARRAY_master, 4},
    {"_binGroup2_EFF_HIER", (DL_FUNC) &_binGroup2_EFF_HIER, 5},
    {"_binGroup2_prob", (DL_FUNC) &_binGroup2_prob, 5},
    {"_binGroup2_ACCU_HIER", (DL_FUNC) &_binGroup2_ACCU_HIER, 5},
    {"_binGroup2_OPT", (DL_FUNC) &_binGroup2_OPT, 6},
    {"_binGroup2_optimal_stage", (DL_FUNC) &_binGroup2_optimal_stage, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_binGroup2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
