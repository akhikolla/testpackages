// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// newLC
List newLC(DataFrame& patients, std::vector<double> limits, unsigned int numThreads);
RcppExport SEXP _LocalControl_newLC(SEXP patientsSEXP, SEXP limitsSEXP, SEXP numThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type patients(patientsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type limits(limitsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type numThreads(numThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(newLC(patients, limits, numThreads));
    return rcpp_result_gen;
END_RCPP
}
// newCRLC
List newCRLC(DataFrame& patients, std::vector<double> limits, std::vector<double> fTimes, int cenCode, unsigned int numThreads);
RcppExport SEXP _LocalControl_newCRLC(SEXP patientsSEXP, SEXP limitsSEXP, SEXP fTimesSEXP, SEXP cenCodeSEXP, SEXP numThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type patients(patientsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type limits(limitsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type fTimes(fTimesSEXP);
    Rcpp::traits::input_parameter< int >::type cenCode(cenCodeSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type numThreads(numThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(newCRLC(patients, limits, fTimes, cenCode, numThreads));
    return rcpp_result_gen;
END_RCPP
}
// getMaxDist
double getMaxDist(DataFrame& df);
RcppExport SEXP _LocalControl_getMaxDist(SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type df(dfSEXP);
    rcpp_result_gen = Rcpp::wrap(getMaxDist(df));
    return rcpp_result_gen;
END_RCPP
}
