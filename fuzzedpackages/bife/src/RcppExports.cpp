// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// group_sums
arma::vec group_sums(const arma::vec& kv, const arma::ivec& kT);
RcppExport SEXP _bife_group_sums(SEXP kvSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type kv(kvSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(group_sums(kv, kT));
    return rcpp_result_gen;
END_RCPP
}
// group_sums_bias
arma::vec group_sums_bias(const arma::mat& kM, const arma::vec& kw, const arma::ivec& kT);
RcppExport SEXP _bife_group_sums_bias(SEXP kMSEXP, SEXP kwSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kM(kMSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(group_sums_bias(kM, kw, kT));
    return rcpp_result_gen;
END_RCPP
}
// group_sums_cov
arma::mat group_sums_cov(const arma::mat& kM1, const arma::mat& kM2, const arma::ivec& kT);
RcppExport SEXP _bife_group_sums_cov(SEXP kM1SEXP, SEXP kM2SEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kM1(kM1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type kM2(kM2SEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(group_sums_cov(kM1, kM2, kT));
    return rcpp_result_gen;
END_RCPP
}
// group_sums_spectral
arma::vec group_sums_spectral(const arma::mat& kM, const arma::vec& kv, const arma::vec& kw, const int kL, const arma::ivec& kT);
RcppExport SEXP _bife_group_sums_spectral(SEXP kMSEXP, SEXP kvSEXP, SEXP kwSEXP, SEXP kLSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kM(kMSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kv(kvSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const int >::type kL(kLSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(group_sums_spectral(kM, kv, kw, kL, kT));
    return rcpp_result_gen;
END_RCPP
}
// group_sums_var
arma::mat group_sums_var(const arma::mat& kM, const arma::ivec& kT);
RcppExport SEXP _bife_group_sums_var(SEXP kMSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kM(kMSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(group_sums_var(kM, kT));
    return rcpp_result_gen;
END_RCPP
}
// center_variables
arma::mat center_variables(const arma::mat& kM, const arma::vec& kw, const arma::ivec& kT);
RcppExport SEXP _bife_center_variables(SEXP kMSEXP, SEXP kwSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kM(kMSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(center_variables(kM, kw, kT));
    return rcpp_result_gen;
END_RCPP
}
// update_alpha
arma::vec update_alpha(const arma::vec& ku, const arma::vec& kw, const arma::ivec& kT);
RcppExport SEXP _bife_update_alpha(SEXP kuSEXP, SEXP kwSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(update_alpha(ku, kw, kT));
    return rcpp_result_gen;
END_RCPP
}
// variance_alpha
arma::vec variance_alpha(const arma::mat& kV, const arma::mat& kX, const arma::vec& kw, const arma::ivec& kT);
RcppExport SEXP _bife_variance_alpha(SEXP kVSEXP, SEXP kXSEXP, SEXP kwSEXP, SEXP kTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kV(kVSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type kX(kXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type kT(kTSEXP);
    rcpp_result_gen = Rcpp::wrap(variance_alpha(kV, kX, kw, kT));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bife_group_sums", (DL_FUNC) &_bife_group_sums, 2},
    {"_bife_group_sums_bias", (DL_FUNC) &_bife_group_sums_bias, 3},
    {"_bife_group_sums_cov", (DL_FUNC) &_bife_group_sums_cov, 3},
    {"_bife_group_sums_spectral", (DL_FUNC) &_bife_group_sums_spectral, 5},
    {"_bife_group_sums_var", (DL_FUNC) &_bife_group_sums_var, 2},
    {"_bife_center_variables", (DL_FUNC) &_bife_center_variables, 3},
    {"_bife_update_alpha", (DL_FUNC) &_bife_update_alpha, 3},
    {"_bife_variance_alpha", (DL_FUNC) &_bife_variance_alpha, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_bife(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
