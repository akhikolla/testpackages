// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// match
Rcpp::CharacterMatrix match(arma::uvec term_vector, arma::mat pdf_tdm, arma::mat term_tdm, arma::vec thresholds, arma::uvec pdf_index, std::vector<std::string> terms, std::vector<std::string> sentences);
RcppExport SEXP _goldi_match(SEXP term_vectorSEXP, SEXP pdf_tdmSEXP, SEXP term_tdmSEXP, SEXP thresholdsSEXP, SEXP pdf_indexSEXP, SEXP termsSEXP, SEXP sentencesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type term_vector(term_vectorSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pdf_tdm(pdf_tdmSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type term_tdm(term_tdmSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thresholds(thresholdsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type pdf_index(pdf_indexSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type terms(termsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type sentences(sentencesSEXP);
    rcpp_result_gen = Rcpp::wrap(match(term_vector, pdf_tdm, term_tdm, thresholds, pdf_index, terms, sentences));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_goldi_match", (DL_FUNC) &_goldi_match, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_goldi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
