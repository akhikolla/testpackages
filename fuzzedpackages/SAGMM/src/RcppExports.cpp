// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mahalanobis_HD
double mahalanobis_HD(arma::rowvec y, arma::rowvec mu, arma::mat sigma);
RcppExport SEXP _SAGMM_mahalanobis_HD(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mahalanobis_HD(y, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// norm_HD
double norm_HD(arma::rowvec y, arma::rowvec mu, arma::mat sigma);
RcppExport SEXP _SAGMM_norm_HD(SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(norm_HD(y, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// main_loop
Rcpp::List main_loop(arma::mat& X, int Dimensions, int Number, int Groups, arma::mat MU_O, arma::vec LAMBDA_O, arma::vec PISTAR_O, arma::cube SIGMA, arma::vec GAMMA);
RcppExport SEXP _SAGMM_main_loop(SEXP XSEXP, SEXP DimensionsSEXP, SEXP NumberSEXP, SEXP GroupsSEXP, SEXP MU_OSEXP, SEXP LAMBDA_OSEXP, SEXP PISTAR_OSEXP, SEXP SIGMASEXP, SEXP GAMMASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type Dimensions(DimensionsSEXP);
    Rcpp::traits::input_parameter< int >::type Number(NumberSEXP);
    Rcpp::traits::input_parameter< int >::type Groups(GroupsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type MU_O(MU_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type LAMBDA_O(LAMBDA_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type PISTAR_O(PISTAR_OSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type SIGMA(SIGMASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type GAMMA(GAMMASEXP);
    rcpp_result_gen = Rcpp::wrap(main_loop(X, Dimensions, Number, Groups, MU_O, LAMBDA_O, PISTAR_O, SIGMA, GAMMA));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SAGMM_mahalanobis_HD", (DL_FUNC) &_SAGMM_mahalanobis_HD, 3},
    {"_SAGMM_norm_HD", (DL_FUNC) &_SAGMM_norm_HD, 3},
    {"_SAGMM_main_loop", (DL_FUNC) &_SAGMM_main_loop, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_SAGMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
