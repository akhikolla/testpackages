// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ComputeBlockInvXTX
Eigen::SparseMatrix<double> ComputeBlockInvXTX(Eigen::MatrixXd X_s, SEXP a, SEXP ind_strt, SEXP n_dc);
RcppExport SEXP _fusedest_ComputeBlockInvXTX(SEXP X_sSEXP, SEXP aSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_s(X_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type a(aSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeBlockInvXTX(X_s, a, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// RcppBlockXTX
Eigen::SparseMatrix<double> RcppBlockXTX(Eigen::MatrixXd X_s, SEXP grp_size, SEXP ind_strt);
RcppExport SEXP _fusedest_RcppBlockXTX(SEXP X_sSEXP, SEXP grp_sizeSEXP, SEXP ind_strtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_s(X_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type grp_size(grp_sizeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppBlockXTX(X_s, grp_size, ind_strt));
    return rcpp_result_gen;
END_RCPP
}
// ComputeBlockXTX
Eigen::SparseMatrix<double> ComputeBlockXTX(Eigen::MatrixXd X_s, SEXP a, SEXP ind_strt, SEXP n_dc);
RcppExport SEXP _fusedest_ComputeBlockXTX(SEXP X_sSEXP, SEXP aSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_s(X_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type a(aSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeBlockXTX(X_s, a, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeBlockXTy
SEXP ComputeBlockXTy(Eigen::MatrixXd X_s, Eigen::VectorXd y_s, SEXP ind_strt, SEXP n_dc);
RcppExport SEXP _fusedest_ComputeBlockXTy(SEXP X_sSEXP, SEXP y_sSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_s(X_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y_s(y_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeBlockXTy(X_s, y_s, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// Blockl2Norm
Eigen::VectorXd Blockl2Norm(Eigen::VectorXd beta_i, Eigen::VectorXd beta_j, SEXP p, SEXP q_H);
RcppExport SEXP _fusedest_Blockl2Norm(SEXP beta_iSEXP, SEXP beta_jSEXP, SEXP pSEXP, SEXP q_HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_i(beta_iSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_j(beta_jSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    rcpp_result_gen = Rcpp::wrap(Blockl2Norm(beta_i, beta_j, p, q_H));
    return rcpp_result_gen;
END_RCPP
}
// ComputeBlockOLS
SEXP ComputeBlockOLS(SEXP m, SEXP p, Eigen::SparseMatrix<double> inv_XTX_s, Eigen::VectorXd XTy_s, Eigen::MatrixXd b_s);
RcppExport SEXP _fusedest_ComputeBlockOLS(SEXP mSEXP, SEXP pSEXP, SEXP inv_XTX_sSEXP, SEXP XTy_sSEXP, SEXP b_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type m(mSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type inv_XTX_s(inv_XTX_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type XTy_s(XTy_sSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type b_s(b_sSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeBlockOLS(m, p, inv_XTX_s, XTy_s, b_s));
    return rcpp_result_gen;
END_RCPP
}
// ComputeCholeskyLT
Eigen::SparseMatrix<double> ComputeCholeskyLT(Eigen::SparseMatrix<double> XTX_s);
RcppExport SEXP _fusedest_ComputeCholeskyLT(SEXP XTX_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type XTX_s(XTX_sSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeCholeskyLT(XTX_s));
    return rcpp_result_gen;
END_RCPP
}
// ComputeCholeskyLTXTXrhoGTG
Eigen::SparseMatrix<double> ComputeCholeskyLTXTXrhoGTG(Eigen::SparseMatrix<double> XTX_s, Eigen::SparseMatrix<double> G_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeCholeskyLTXTXrhoGTG(SEXP XTX_sSEXP, SEXP G_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type XTX_s(XTX_sSEXP);
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeCholeskyLTXTXrhoGTG(XTX_s, G_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeCholeskyOLS
Eigen::VectorXd ComputeCholeskyOLS(Eigen::SparseMatrix<double> LT_s, Eigen::VectorXd XTy_s, Eigen::VectorXd b);
RcppExport SEXP _fusedest_ComputeCholeskyOLS(SEXP LT_sSEXP, SEXP XTy_sSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type LT_s(LT_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type XTy_s(XTy_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeCholeskyOLS(LT_s, XTy_s, b));
    return rcpp_result_gen;
END_RCPP
}
// ComputeDualError
double ComputeDualError(SEXP p, SEXP q_H, Eigen::VectorXd xi01, Eigen::VectorXd xi02, Eigen::VectorXd tau);
RcppExport SEXP _fusedest_ComputeDualError(SEXP pSEXP, SEXP q_HSEXP, SEXP xi01SEXP, SEXP xi02SEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi01(xi01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi02(xi02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeDualError(p, q_H, xi01, xi02, tau));
    return rcpp_result_gen;
END_RCPP
}
// ComputeEstGraph
Eigen::SparseMatrix<double> ComputeEstGraph(Eigen::VectorXd alpha, Eigen::MatrixXd H, SEXP p, SEXP m, SEXP q_H);
RcppExport SEXP _fusedest_ComputeEstGraph(SEXP alphaSEXP, SEXP HSEXP, SEXP pSEXP, SEXP mSEXP, SEXP q_HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type H(HSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m(mSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeEstGraph(alpha, H, p, m, q_H));
    return rcpp_result_gen;
END_RCPP
}
// ComputeG
Eigen::SparseMatrix<double> ComputeG(SEXP p, SEXP m, SEXP q_H, Eigen::MatrixXd H_s);
RcppExport SEXP _fusedest_ComputeG(SEXP pSEXP, SEXP mSEXP, SEXP q_HSEXP, SEXP H_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m(mSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type H_s(H_sSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeG(p, m, q_H, H_s));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGBeta_ADMM
SEXP ComputeGBeta_ADMM(SEXP q_H, SEXP p, Eigen::MatrixXd beta_s, Eigen::MatrixXd H_s);
RcppExport SEXP _fusedest_ComputeGBeta_ADMM(SEXP q_HSEXP, SEXP pSEXP, SEXP beta_sSEXP, SEXP H_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type H_s(H_sSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGBeta_ADMM(q_H, p, beta_s, H_s));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGTGamma_Eta_ADMM
SEXP ComputeGTGamma_Eta_ADMM(Eigen::SparseMatrix<double> G_s, Eigen::VectorXd gamma_s, Eigen::VectorXd eta_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeGTGamma_Eta_ADMM(SEXP G_sSEXP, SEXP gamma_sSEXP, SEXP eta_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type gamma_s(gamma_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type eta_s(eta_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGTGamma_Eta_ADMM(G_s, gamma_s, eta_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGTGamma_Eta_ADMM_NonSparse
SEXP ComputeGTGamma_Eta_ADMM_NonSparse(Eigen::MatrixXd G_s, Eigen::VectorXd gamma_s, Eigen::VectorXd eta_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeGTGamma_Eta_ADMM_NonSparse(SEXP G_sSEXP, SEXP gamma_sSEXP, SEXP eta_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type gamma_s(gamma_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type eta_s(eta_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGTGamma_Eta_ADMM_NonSparse(G_s, gamma_s, eta_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeInvXTXrhoGTG
SEXP ComputeInvXTXrhoGTG(Eigen::SparseMatrix<double> XTX_s, Eigen::SparseMatrix<double> G_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeInvXTXrhoGTG(SEXP XTX_sSEXP, SEXP G_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type XTX_s(XTX_sSEXP);
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeInvXTXrhoGTG(XTX_s, G_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeInvXTXrhoGTG_NonSparse
SEXP ComputeInvXTXrhoGTG_NonSparse(Eigen::MatrixXd XTX_s, Eigen::MatrixXd G_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeInvXTXrhoGTG_NonSparse(SEXP XTX_sSEXP, SEXP G_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type XTX_s(XTX_sSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeInvXTXrhoGTG_NonSparse(XTX_s, G_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeLogitLoss
double ComputeLogitLoss(Eigen::MatrixXd X, Eigen::VectorXd y, Eigen::MatrixXd beta, SEXP ind_strt, SEXP n_dc);
RcppExport SEXP _fusedest_ComputeLogitLoss(SEXP XSEXP, SEXP ySEXP, SEXP betaSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeLogitLoss(X, y, beta, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeLogitMSPE
double ComputeLogitMSPE(Eigen::MatrixXd X, Eigen::VectorXd y, Eigen::MatrixXd beta, Eigen::VectorXd ind_strt, Eigen::VectorXd n_dc);
RcppExport SEXP _fusedest_ComputeLogitMSPE(SEXP XSEXP, SEXP ySEXP, SEXP betaSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeLogitMSPE(X, y, beta, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// ComputePrimalError
double ComputePrimalError(SEXP p, SEXP q_H, Eigen::VectorXd theta01, Eigen::VectorXd theta02, Eigen::VectorXd theta03, Eigen::VectorXd theta04, Eigen::VectorXd beta01, Eigen::VectorXd beta02, Eigen::VectorXd alpha);
RcppExport SEXP _fusedest_ComputePrimalError(SEXP pSEXP, SEXP q_HSEXP, SEXP theta01SEXP, SEXP theta02SEXP, SEXP theta03SEXP, SEXP theta04SEXP, SEXP beta01SEXP, SEXP beta02SEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta01(theta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta02(theta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta03(theta03SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta04(theta04SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta01(beta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta02(beta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputePrimalError(p, q_H, theta01, theta02, theta03, theta04, beta01, beta02, alpha));
    return rcpp_result_gen;
END_RCPP
}
// ComputeRhoGTGamma
Eigen::VectorXd ComputeRhoGTGamma(Eigen::SparseMatrix<double> G_s, Eigen::VectorXd gamma_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeRhoGTGamma(SEXP G_sSEXP, SEXP gamma_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type gamma_s(gamma_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeRhoGTGamma(G_s, gamma_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// ComputeSquaredl2Loss
SEXP ComputeSquaredl2Loss(Eigen::MatrixXd X_s, Eigen::VectorXd y_s, Eigen::MatrixXd beta_s, SEXP ind_strt, SEXP n_dc);
RcppExport SEXP _fusedest_ComputeSquaredl2Loss(SEXP X_sSEXP, SEXP y_sSEXP, SEXP beta_sSEXP, SEXP ind_strtSEXP, SEXP n_dcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_s(X_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y_s(y_sSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_strt(ind_strtSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_dc(n_dcSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeSquaredl2Loss(X_s, y_s, beta_s, ind_strt, n_dc));
    return rcpp_result_gen;
END_RCPP
}
// ComputeXTXrhoGTG
Eigen::SparseMatrix<double> ComputeXTXrhoGTG(Eigen::SparseMatrix<double> XTX_s, Eigen::SparseMatrix<double> G_s, SEXP rho);
RcppExport SEXP _fusedest_ComputeXTXrhoGTG(SEXP XTX_sSEXP, SEXP G_sSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type XTX_s(XTX_sSEXP);
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type G_s(G_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeXTXrhoGTG(XTX_s, G_s, rho));
    return rcpp_result_gen;
END_RCPP
}
// Computeb
SEXP Computeb(SEXP p, Eigen::VectorXd theta, Eigen::VectorXd xi, SEXP o_edge_ext, SEXP deg_dc, SEXP ind_edge_strt);
RcppExport SEXP _fusedest_Computeb(SEXP pSEXP, SEXP thetaSEXP, SEXP xiSEXP, SEXP o_edge_extSEXP, SEXP deg_dcSEXP, SEXP ind_edge_strtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< SEXP >::type o_edge_ext(o_edge_extSEXP);
    Rcpp::traits::input_parameter< SEXP >::type deg_dc(deg_dcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ind_edge_strt(ind_edge_strtSEXP);
    rcpp_result_gen = Rcpp::wrap(Computeb(p, theta, xi, o_edge_ext, deg_dc, ind_edge_strt));
    return rcpp_result_gen;
END_RCPP
}
// GradLogisticReg
SEXP GradLogisticReg(Eigen::MatrixXd X, Eigen::VectorXd y, SEXP a, Eigen::VectorXd b, Eigen::VectorXd beta_ini, SEXP stepsize, SEXP max_iter, SEXP tol_err);
RcppExport SEXP _fusedest_GradLogisticReg(SEXP XSEXP, SEXP ySEXP, SEXP aSEXP, SEXP bSEXP, SEXP beta_iniSEXP, SEXP stepsizeSEXP, SEXP max_iterSEXP, SEXP tol_errSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type a(aSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_ini(beta_iniSEXP);
    Rcpp::traits::input_parameter< SEXP >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol_err(tol_errSEXP);
    rcpp_result_gen = Rcpp::wrap(GradLogisticReg(X, y, a, b, beta_ini, stepsize, max_iter, tol_err));
    return rcpp_result_gen;
END_RCPP
}
// IRLSLogisticReg
SEXP IRLSLogisticReg(Eigen::MatrixXd X, Eigen::VectorXd y, SEXP a, Eigen::VectorXd b, Eigen::VectorXd beta_ini, SEXP max_iter, SEXP tol_err);
RcppExport SEXP _fusedest_IRLSLogisticReg(SEXP XSEXP, SEXP ySEXP, SEXP aSEXP, SEXP bSEXP, SEXP beta_iniSEXP, SEXP max_iterSEXP, SEXP tol_errSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type a(aSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta_ini(beta_iniSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol_err(tol_errSEXP);
    rcpp_result_gen = Rcpp::wrap(IRLSLogisticReg(X, y, a, b, beta_ini, max_iter, tol_err));
    return rcpp_result_gen;
END_RCPP
}
// MaxEigenXTX
double MaxEigenXTX(Eigen::MatrixXd X, Eigen::VectorXd z, SEXP max_iter, SEXP tol_err);
RcppExport SEXP _fusedest_MaxEigenXTX(SEXP XSEXP, SEXP zSEXP, SEXP max_iterSEXP, SEXP tol_errSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol_err(tol_errSEXP);
    rcpp_result_gen = Rcpp::wrap(MaxEigenXTX(X, z, max_iter, tol_err));
    return rcpp_result_gen;
END_RCPP
}
// MaxEigenXTXrhoGTG
SEXP MaxEigenXTXrhoGTG(SEXP X, SEXP b, SEXP max_iter, SEXP tol_err);
RcppExport SEXP _fusedest_MaxEigenXTXrhoGTG(SEXP XSEXP, SEXP bSEXP, SEXP max_iterSEXP, SEXP tol_errSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol_err(tol_errSEXP);
    rcpp_result_gen = Rcpp::wrap(MaxEigenXTXrhoGTG(X, b, max_iter, tol_err));
    return rcpp_result_gen;
END_RCPP
}
// Suml2Distance
SEXP Suml2Distance(SEXP p, SEXP q_H, Eigen::VectorXd a, Eigen::VectorXd b);
RcppExport SEXP _fusedest_Suml2Distance(SEXP pSEXP, SEXP q_HSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type a(aSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(Suml2Distance(p, q_H, a, b));
    return rcpp_result_gen;
END_RCPP
}
// UpdateAlphal2Norm
SEXP UpdateAlphal2Norm(Eigen::VectorXd theta01, Eigen::VectorXd theta02, Eigen::VectorXd tau, SEXP p, SEXP q_H, SEXP lambda);
RcppExport SEXP _fusedest_UpdateAlphal2Norm(SEXP theta01SEXP, SEXP theta02SEXP, SEXP tauSEXP, SEXP pSEXP, SEXP q_HSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta01(theta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta02(theta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateAlphal2Norm(theta01, theta02, tau, p, q_H, lambda));
    return rcpp_result_gen;
END_RCPP
}
// UpdateEta_ADMM
SEXP UpdateEta_ADMM(Eigen::VectorXd eta01, Eigen::VectorXd Gbeta, Eigen::VectorXd gamma);
RcppExport SEXP _fusedest_UpdateEta_ADMM(SEXP eta01SEXP, SEXP GbetaSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type eta01(eta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Gbeta(GbetaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateEta_ADMM(eta01, Gbeta, gamma));
    return rcpp_result_gen;
END_RCPP
}
// UpdateGamma_ADMM
SEXP UpdateGamma_ADMM(SEXP q_H, SEXP p, Eigen::VectorXd Gbeta_s, Eigen::VectorXd eta_s, SEXP lambda);
RcppExport SEXP _fusedest_UpdateGamma_ADMM(SEXP q_HSEXP, SEXP pSEXP, SEXP Gbeta_sSEXP, SEXP eta_sSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Gbeta_s(Gbeta_sSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type eta_s(eta_sSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateGamma_ADMM(q_H, p, Gbeta_s, eta_s, lambda));
    return rcpp_result_gen;
END_RCPP
}
// UpdateTau
Eigen::VectorXd UpdateTau(Eigen::VectorXd tau01, Eigen::VectorXd theta01, Eigen::VectorXd theta02, Eigen::VectorXd alpha);
RcppExport SEXP _fusedest_UpdateTau(SEXP tau01SEXP, SEXP theta01SEXP, SEXP theta02SEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type tau01(tau01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta01(theta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta02(theta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateTau(tau01, theta01, theta02, alpha));
    return rcpp_result_gen;
END_RCPP
}
// UpdateTheta
Eigen::VectorXd UpdateTheta(Eigen::VectorXd theta01, Eigen::VectorXd alpha, Eigen::VectorXd tau, Eigen::VectorXd beta, Eigen::VectorXd xi, Eigen::VectorXd theta02);
RcppExport SEXP _fusedest_UpdateTheta(SEXP theta01SEXP, SEXP alphaSEXP, SEXP tauSEXP, SEXP betaSEXP, SEXP xiSEXP, SEXP theta02SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta01(theta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta02(theta02SEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateTheta(theta01, alpha, tau, beta, xi, theta02));
    return rcpp_result_gen;
END_RCPP
}
// UpdateThetaTauXi
SEXP UpdateThetaTauXi(SEXP p, SEXP q_H, Eigen::VectorXd beta01, Eigen::VectorXd beta02, Eigen::VectorXd alpha, Eigen::VectorXd tau, Eigen::VectorXd theta01, Eigen::VectorXd theta02, Eigen::VectorXd xi01, Eigen::VectorXd xi02);
RcppExport SEXP _fusedest_UpdateThetaTauXi(SEXP pSEXP, SEXP q_HSEXP, SEXP beta01SEXP, SEXP beta02SEXP, SEXP alphaSEXP, SEXP tauSEXP, SEXP theta01SEXP, SEXP theta02SEXP, SEXP xi01SEXP, SEXP xi02SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< SEXP >::type q_H(q_HSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta01(beta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta02(beta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta01(theta01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta02(theta02SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi01(xi01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi02(xi02SEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateThetaTauXi(p, q_H, beta01, beta02, alpha, tau, theta01, theta02, xi01, xi02));
    return rcpp_result_gen;
END_RCPP
}
// UpdateXi
Eigen::VectorXd UpdateXi(Eigen::VectorXd xi01, Eigen::VectorXd beta, Eigen::VectorXd theta);
RcppExport SEXP _fusedest_UpdateXi(SEXP xi01SEXP, SEXP betaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xi01(xi01SEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateXi(xi01, beta, theta));
    return rcpp_result_gen;
END_RCPP
}
// RcppInvGram
SEXP RcppInvGram(SEXP X, SEXP w, SEXP lambda);
RcppExport SEXP _fusedest_RcppInvGram(SEXP XSEXP, SEXP wSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type w(wSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppInvGram(X, w, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Rcppl2norm
SEXP Rcppl2norm(SEXP x);
RcppExport SEXP _fusedest_Rcppl2norm(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcppl2norm(x));
    return rcpp_result_gen;
END_RCPP
}
// Rcppl2normProx
SEXP Rcppl2normProx(SEXP x, SEXP l2normx, SEXP lambda);
RcppExport SEXP _fusedest_Rcppl2normProx(SEXP xSEXP, SEXP l2normxSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type l2normx(l2normxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcppl2normProx(x, l2normx, lambda));
    return rcpp_result_gen;
END_RCPP
}
// RcppWolsSolver03
SEXP RcppWolsSolver03(SEXP invXtwX, SEXP Xtwy, SEXP b);
RcppExport SEXP _fusedest_RcppWolsSolver03(SEXP invXtwXSEXP, SEXP XtwySEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type invXtwX(invXtwXSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xtwy(XtwySEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppWolsSolver03(invXtwX, Xtwy, b));
    return rcpp_result_gen;
END_RCPP
}
// RcppXtwy
SEXP RcppXtwy(SEXP X, SEXP y, SEXP w);
RcppExport SEXP _fusedest_RcppXtwy(SEXP XSEXP, SEXP ySEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppXtwy(X, y, w));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fusedest_ComputeBlockInvXTX", (DL_FUNC) &_fusedest_ComputeBlockInvXTX, 4},
    {"_fusedest_RcppBlockXTX", (DL_FUNC) &_fusedest_RcppBlockXTX, 3},
    {"_fusedest_ComputeBlockXTX", (DL_FUNC) &_fusedest_ComputeBlockXTX, 4},
    {"_fusedest_ComputeBlockXTy", (DL_FUNC) &_fusedest_ComputeBlockXTy, 4},
    {"_fusedest_Blockl2Norm", (DL_FUNC) &_fusedest_Blockl2Norm, 4},
    {"_fusedest_ComputeBlockOLS", (DL_FUNC) &_fusedest_ComputeBlockOLS, 5},
    {"_fusedest_ComputeCholeskyLT", (DL_FUNC) &_fusedest_ComputeCholeskyLT, 1},
    {"_fusedest_ComputeCholeskyLTXTXrhoGTG", (DL_FUNC) &_fusedest_ComputeCholeskyLTXTXrhoGTG, 3},
    {"_fusedest_ComputeCholeskyOLS", (DL_FUNC) &_fusedest_ComputeCholeskyOLS, 3},
    {"_fusedest_ComputeDualError", (DL_FUNC) &_fusedest_ComputeDualError, 5},
    {"_fusedest_ComputeEstGraph", (DL_FUNC) &_fusedest_ComputeEstGraph, 5},
    {"_fusedest_ComputeG", (DL_FUNC) &_fusedest_ComputeG, 4},
    {"_fusedest_ComputeGBeta_ADMM", (DL_FUNC) &_fusedest_ComputeGBeta_ADMM, 4},
    {"_fusedest_ComputeGTGamma_Eta_ADMM", (DL_FUNC) &_fusedest_ComputeGTGamma_Eta_ADMM, 4},
    {"_fusedest_ComputeGTGamma_Eta_ADMM_NonSparse", (DL_FUNC) &_fusedest_ComputeGTGamma_Eta_ADMM_NonSparse, 4},
    {"_fusedest_ComputeInvXTXrhoGTG", (DL_FUNC) &_fusedest_ComputeInvXTXrhoGTG, 3},
    {"_fusedest_ComputeInvXTXrhoGTG_NonSparse", (DL_FUNC) &_fusedest_ComputeInvXTXrhoGTG_NonSparse, 3},
    {"_fusedest_ComputeLogitLoss", (DL_FUNC) &_fusedest_ComputeLogitLoss, 5},
    {"_fusedest_ComputeLogitMSPE", (DL_FUNC) &_fusedest_ComputeLogitMSPE, 5},
    {"_fusedest_ComputePrimalError", (DL_FUNC) &_fusedest_ComputePrimalError, 9},
    {"_fusedest_ComputeRhoGTGamma", (DL_FUNC) &_fusedest_ComputeRhoGTGamma, 3},
    {"_fusedest_ComputeSquaredl2Loss", (DL_FUNC) &_fusedest_ComputeSquaredl2Loss, 5},
    {"_fusedest_ComputeXTXrhoGTG", (DL_FUNC) &_fusedest_ComputeXTXrhoGTG, 3},
    {"_fusedest_Computeb", (DL_FUNC) &_fusedest_Computeb, 6},
    {"_fusedest_GradLogisticReg", (DL_FUNC) &_fusedest_GradLogisticReg, 8},
    {"_fusedest_IRLSLogisticReg", (DL_FUNC) &_fusedest_IRLSLogisticReg, 7},
    {"_fusedest_MaxEigenXTX", (DL_FUNC) &_fusedest_MaxEigenXTX, 4},
    {"_fusedest_MaxEigenXTXrhoGTG", (DL_FUNC) &_fusedest_MaxEigenXTXrhoGTG, 4},
    {"_fusedest_Suml2Distance", (DL_FUNC) &_fusedest_Suml2Distance, 4},
    {"_fusedest_UpdateAlphal2Norm", (DL_FUNC) &_fusedest_UpdateAlphal2Norm, 6},
    {"_fusedest_UpdateEta_ADMM", (DL_FUNC) &_fusedest_UpdateEta_ADMM, 3},
    {"_fusedest_UpdateGamma_ADMM", (DL_FUNC) &_fusedest_UpdateGamma_ADMM, 5},
    {"_fusedest_UpdateTau", (DL_FUNC) &_fusedest_UpdateTau, 4},
    {"_fusedest_UpdateTheta", (DL_FUNC) &_fusedest_UpdateTheta, 6},
    {"_fusedest_UpdateThetaTauXi", (DL_FUNC) &_fusedest_UpdateThetaTauXi, 10},
    {"_fusedest_UpdateXi", (DL_FUNC) &_fusedest_UpdateXi, 3},
    {"_fusedest_RcppInvGram", (DL_FUNC) &_fusedest_RcppInvGram, 3},
    {"_fusedest_Rcppl2norm", (DL_FUNC) &_fusedest_Rcppl2norm, 1},
    {"_fusedest_Rcppl2normProx", (DL_FUNC) &_fusedest_Rcppl2normProx, 3},
    {"_fusedest_RcppWolsSolver03", (DL_FUNC) &_fusedest_RcppWolsSolver03, 3},
    {"_fusedest_RcppXtwy", (DL_FUNC) &_fusedest_RcppXtwy, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_fusedest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
