// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getFitted
arma::mat getFitted(arma::vec& f_fin, const arma::vec& f_ini, const arma::mat& beta, const arma::vec& alpha, const int& k);
RcppExport SEXP _gdpc_getFitted(SEXP f_finSEXP, SEXP f_iniSEXP, SEXP betaSEXP, SEXP alphaSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type f_fin(f_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type f_ini(f_iniSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const int& >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(getFitted(f_fin, f_ini, beta, alpha, k));
    return rcpp_result_gen;
END_RCPP
}
// getFini
arma::vec getFini(const arma::mat& Z, const int& k);
RcppExport SEXP _gdpc_getFini(SEXP ZSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int& >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(getFini(Z, k));
    return rcpp_result_gen;
END_RCPP
}
// gdpc_priv
List gdpc_priv(const arma::mat& Z, const int& k, const arma::vec& f_ini, const bool& passf_ini, const double& tol, const int& niter_max, const int& sel);
RcppExport SEXP _gdpc_gdpc_priv(SEXP ZSEXP, SEXP kSEXP, SEXP f_iniSEXP, SEXP passf_iniSEXP, SEXP tolSEXP, SEXP niter_maxSEXP, SEXP selSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int& >::type k(kSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type f_ini(f_iniSEXP);
    Rcpp::traits::input_parameter< const bool& >::type passf_ini(passf_iniSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int& >::type niter_max(niter_maxSEXP);
    Rcpp::traits::input_parameter< const int& >::type sel(selSEXP);
    rcpp_result_gen = Rcpp::wrap(gdpc_priv(Z, k, f_ini, passf_ini, tol, niter_max, sel));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gdpc_getFitted", (DL_FUNC) &_gdpc_getFitted, 5},
    {"_gdpc_getFini", (DL_FUNC) &_gdpc_getFini, 2},
    {"_gdpc_gdpc_priv", (DL_FUNC) &_gdpc_gdpc_priv, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_gdpc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
