// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ContGrid
arma::mat ContGrid(arma::mat& xc, arma::mat& xg, arma::vec& y, arma::mat& x2, arma::vec& y2, arma::vec lamb1, arma::vec lamb2, arma::vec bc0, arma::vec bg0, double r, arma::mat& a, int p, int pc, char method);
RcppExport SEXP _regnet_ContGrid(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP x2SEXP, SEXP y2SEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bc0SEXP, SEXP bg0SEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc0(bc0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg0(bg0SEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< char >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(ContGrid(xc, xg, y, x2, y2, lamb1, lamb2, bc0, bg0, r, a, p, pc, method));
    return rcpp_result_gen;
END_RCPP
}
// LogitGrid
arma::mat LogitGrid(arma::mat& x, arma::vec& y, arma::mat& x2, arma::vec& y2, arma::vec lamb1, arma::vec lamb2, arma::vec b, double r, arma::mat& a, int p, double alpha, char method);
RcppExport SEXP _regnet_LogitGrid(SEXP xSEXP, SEXP ySEXP, SEXP x2SEXP, SEXP y2SEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bSEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP alphaSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< char >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(LogitGrid(x, y, x2, y2, lamb1, lamb2, b, r, a, p, alpha, method));
    return rcpp_result_gen;
END_RCPP
}
// RunCont
arma::vec RunCont(arma::mat& xc, arma::mat& xg, arma::vec& y, double lamb1, double lamb2, arma::vec bc, arma::vec bg, double r, arma::mat& a, int p, int pc, char method);
RcppExport SEXP _regnet_RunCont(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< double >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< char >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(RunCont(xc, xg, y, lamb1, lamb2, bc, bg, r, a, p, pc, method));
    return rcpp_result_gen;
END_RCPP
}
// RunLogit
arma::vec RunLogit(arma::mat& x, arma::vec& y, double lamb1, double lamb2, arma::vec b, double r, arma::mat& a, int p, double alpha, char method);
RcppExport SEXP _regnet_RunLogit(SEXP xSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bSEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP alphaSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< double >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< char >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(RunLogit(x, y, lamb1, lamb2, b, r, a, p, alpha, method));
    return rcpp_result_gen;
END_RCPP
}
// RunNet
arma::vec RunNet(arma::mat& x, arma::vec& y, double lamb1, double lamb2, arma::vec b, double r, arma::mat& a, int p);
RcppExport SEXP _regnet_RunNet(SEXP xSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bSEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< double >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(RunNet(x, y, lamb1, lamb2, b, r, a, p));
    return rcpp_result_gen;
END_RCPP
}
// RunMCP
arma::vec RunMCP(arma::mat& x, arma::vec& y, double lambda, arma::vec b, double r, int p);
RcppExport SEXP _regnet_RunMCP(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP bSEXP, SEXP rSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(RunMCP(x, y, lambda, b, r, p));
    return rcpp_result_gen;
END_RCPP
}
// RunElastic
arma::vec RunElastic(arma::mat& x, arma::vec& y, double lambda, arma::vec b, double alpha, int p);
RcppExport SEXP _regnet_RunElastic(SEXP xSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(RunElastic(x, y, lambda, b, alpha, p));
    return rcpp_result_gen;
END_RCPP
}
// RunNetSurv
arma::vec RunNetSurv(arma::mat& xc, arma::mat& xg, arma::vec& y, double lamb1, double lamb2, arma::vec bc0, arma::vec bg0, double r, arma::mat& a, int p, int pc, bool robust);
RcppExport SEXP _regnet_RunNetSurv(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bc0SEXP, SEXP bg0SEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< double >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc0(bc0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg0(bg0SEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(RunNetSurv(xc, xg, y, lamb1, lamb2, bc0, bg0, r, a, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}
// RunMCPSurv
arma::vec RunMCPSurv(arma::mat xc, arma::mat xg, arma::vec y, double lamb1, arma::vec bc, arma::vec bg, double r, int p, int pc, bool robust);
RcppExport SEXP _regnet_RunMCPSurv(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP rSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(RunMCPSurv(xc, xg, y, lamb1, bc, bg, r, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}
// RunLassoSurv
arma::vec RunLassoSurv(arma::mat xc, arma::mat xg, arma::vec y, double lamb1, arma::vec bc, arma::vec bg, int p, int pc, bool robust);
RcppExport SEXP _regnet_RunLassoSurv(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP lamb1SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(RunLassoSurv(xc, xg, y, lamb1, bc, bg, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}
// NetGrid
arma::mat NetGrid(arma::mat& xc, arma::mat& xg, arma::vec& y, arma::mat& x2, arma::vec& y2, arma::vec lamb1, arma::vec lamb2, arma::vec bc, arma::vec bg, double r, arma::mat& a, int p, int pc, bool robust);
RcppExport SEXP _regnet_NetGrid(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP x2SEXP, SEXP y2SEXP, SEXP lamb1SEXP, SEXP lamb2SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP rSEXP, SEXP aSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb2(lamb2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(NetGrid(xc, xg, y, x2, y2, lamb1, lamb2, bc, bg, r, a, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}
// MCPGrid
arma::vec MCPGrid(arma::mat& xc, arma::mat& xg, arma::vec& y, arma::mat& x2, arma::vec& y2, arma::vec lamb1, arma::vec bc, arma::vec bg, double r, int p, int pc, bool robust);
RcppExport SEXP _regnet_MCPGrid(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP x2SEXP, SEXP y2SEXP, SEXP lamb1SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP rSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(MCPGrid(xc, xg, y, x2, y2, lamb1, bc, bg, r, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}
// LassoGrid
arma::vec LassoGrid(arma::mat& xc, arma::mat& xg, arma::vec& y, arma::mat& x2, arma::vec& y2, arma::vec lamb1, arma::vec bc, arma::vec bg, int p, int pc, bool robust);
RcppExport SEXP _regnet_LassoGrid(SEXP xcSEXP, SEXP xgSEXP, SEXP ySEXP, SEXP x2SEXP, SEXP y2SEXP, SEXP lamb1SEXP, SEXP bcSEXP, SEXP bgSEXP, SEXP pSEXP, SEXP pcSEXP, SEXP robustSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xg(xgSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lamb1(lamb1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< bool >::type robust(robustSEXP);
    rcpp_result_gen = Rcpp::wrap(LassoGrid(xc, xg, y, x2, y2, lamb1, bc, bg, p, pc, robust));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_regnet_ContGrid", (DL_FUNC) &_regnet_ContGrid, 14},
    {"_regnet_LogitGrid", (DL_FUNC) &_regnet_LogitGrid, 12},
    {"_regnet_RunCont", (DL_FUNC) &_regnet_RunCont, 12},
    {"_regnet_RunLogit", (DL_FUNC) &_regnet_RunLogit, 10},
    {"_regnet_RunNet", (DL_FUNC) &_regnet_RunNet, 8},
    {"_regnet_RunMCP", (DL_FUNC) &_regnet_RunMCP, 6},
    {"_regnet_RunElastic", (DL_FUNC) &_regnet_RunElastic, 6},
    {"_regnet_RunNetSurv", (DL_FUNC) &_regnet_RunNetSurv, 12},
    {"_regnet_RunMCPSurv", (DL_FUNC) &_regnet_RunMCPSurv, 10},
    {"_regnet_RunLassoSurv", (DL_FUNC) &_regnet_RunLassoSurv, 9},
    {"_regnet_NetGrid", (DL_FUNC) &_regnet_NetGrid, 14},
    {"_regnet_MCPGrid", (DL_FUNC) &_regnet_MCPGrid, 12},
    {"_regnet_LassoGrid", (DL_FUNC) &_regnet_LassoGrid, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_regnet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
