// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ipw_estimation
Rcpp::List ipw_estimation(arma::uvec m, arma::vec Y, arma::uword order, bool trace);
RcppExport SEXP gee4_ipw_estimation(SEXP mSEXP, SEXP YSEXP, SEXP orderSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type order(orderSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(ipw_estimation(m, Y, order, trace));
    return rcpp_result_gen;
END_RCPP
}
// gees_estimation
Rcpp::List gees_estimation(arma::uvec m, arma::vec Y, arma::mat X, arma::mat Z, arma::mat W, arma::vec H, std::string method, std::string corrStruct, double rho, arma::vec start, bool trace, bool profile, bool errorMsg);
RcppExport SEXP gee4_gees_estimation(SEXP mSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP HSEXP, SEXP methodSEXP, SEXP corrStructSEXP, SEXP rhoSEXP, SEXP startSEXP, SEXP traceSEXP, SEXP profileSEXP, SEXP errorMsgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type H(HSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< std::string >::type corrStruct(corrStructSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< bool >::type profile(profileSEXP);
    Rcpp::traits::input_parameter< bool >::type errorMsg(errorMsgSEXP);
    rcpp_result_gen = Rcpp::wrap(gees_estimation(m, Y, X, Z, W, H, method, corrStruct, rho, start, trace, profile, errorMsg));
    return rcpp_result_gen;
END_RCPP
}
// geerfit_id
Rcpp::List geerfit_id(arma::uvec m, arma::vec Y, arma::mat X, arma::mat Z, arma::mat W, double rho, arma::vec start, bool trace, bool profile, bool errorMsg);
RcppExport SEXP gee4_geerfit_id(SEXP mSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP rhoSEXP, SEXP startSEXP, SEXP traceSEXP, SEXP profileSEXP, SEXP errorMsgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< bool >::type profile(profileSEXP);
    Rcpp::traits::input_parameter< bool >::type errorMsg(errorMsgSEXP);
    rcpp_result_gen = Rcpp::wrap(geerfit_id(m, Y, X, Z, W, rho, start, trace, profile, errorMsg));
    return rcpp_result_gen;
END_RCPP
}
// geerfit_cs
Rcpp::List geerfit_cs(arma::uvec m, arma::vec Y, arma::mat X, arma::mat Z, arma::mat W, double rho, arma::vec start, bool trace, bool profile, bool errorMsg);
RcppExport SEXP gee4_geerfit_cs(SEXP mSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP rhoSEXP, SEXP startSEXP, SEXP traceSEXP, SEXP profileSEXP, SEXP errorMsgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< bool >::type profile(profileSEXP);
    Rcpp::traits::input_parameter< bool >::type errorMsg(errorMsgSEXP);
    rcpp_result_gen = Rcpp::wrap(geerfit_cs(m, Y, X, Z, W, rho, start, trace, profile, errorMsg));
    return rcpp_result_gen;
END_RCPP
}
// geerfit_ar1
Rcpp::List geerfit_ar1(arma::uvec m, arma::vec Y, arma::mat X, arma::mat Z, arma::mat W, double rho, arma::vec start, bool trace, bool profile, bool errorMsg);
RcppExport SEXP gee4_geerfit_ar1(SEXP mSEXP, SEXP YSEXP, SEXP XSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP rhoSEXP, SEXP startSEXP, SEXP traceSEXP, SEXP profileSEXP, SEXP errorMsgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type start(startSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< bool >::type profile(profileSEXP);
    Rcpp::traits::input_parameter< bool >::type errorMsg(errorMsgSEXP);
    rcpp_result_gen = Rcpp::wrap(geerfit_ar1(m, Y, X, Z, W, rho, start, trace, profile, errorMsg));
    return rcpp_result_gen;
END_RCPP
}
