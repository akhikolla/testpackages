// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// testConstrainedProblem
std::vector<double> testConstrainedProblem(std::string method, bool verbose);
RcppExport SEXP _RcppNLoptExample_testConstrainedProblem(SEXP methodSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(testConstrainedProblem(method, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppNLoptExample_testConstrainedProblem", (DL_FUNC) &_RcppNLoptExample_testConstrainedProblem, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppNLoptExample(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
