// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cget_nucleotide_chunk_counts
Rcpp::NumericVector cget_nucleotide_chunk_counts(std::vector<std::string> key, std::string chr, const unsigned int up_stream, const unsigned int down_stream, long start, long end);
RcppExport SEXP _SeqKat_cget_nucleotide_chunk_counts(SEXP keySEXP, SEXP chrSEXP, SEXP up_streamSEXP, SEXP down_streamSEXP, SEXP startSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type key(keySEXP);
    Rcpp::traits::input_parameter< std::string >::type chr(chrSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type up_stream(up_streamSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type down_stream(down_streamSEXP);
    Rcpp::traits::input_parameter< long >::type start(startSEXP);
    Rcpp::traits::input_parameter< long >::type end(endSEXP);
    rcpp_result_gen = Rcpp::wrap(cget_nucleotide_chunk_counts(key, chr, up_stream, down_stream, start, end));
    return rcpp_result_gen;
END_RCPP
}
// cget_trinucleotide_counts
Rcpp::NumericVector cget_trinucleotide_counts(std::vector<std::string> key, std::string chr, const int length, long int start, long int end);
RcppExport SEXP _SeqKat_cget_trinucleotide_counts(SEXP keySEXP, SEXP chrSEXP, SEXP lengthSEXP, SEXP startSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type key(keySEXP);
    Rcpp::traits::input_parameter< std::string >::type chr(chrSEXP);
    Rcpp::traits::input_parameter< const int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< long int >::type start(startSEXP);
    Rcpp::traits::input_parameter< long int >::type end(endSEXP);
    rcpp_result_gen = Rcpp::wrap(cget_trinucleotide_counts(key, chr, length, start, end));
    return rcpp_result_gen;
END_RCPP
}
// cpp_get_context
Rcpp::CharacterVector cpp_get_context(std::string chr, Rcpp::NumericVector pos, unsigned long pos_length);
RcppExport SEXP _SeqKat_cpp_get_context(SEXP chrSEXP, SEXP posSEXP, SEXP pos_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type chr(chrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pos(posSEXP);
    Rcpp::traits::input_parameter< unsigned long >::type pos_length(pos_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_get_context(chr, pos, pos_length));
    return rcpp_result_gen;
END_RCPP
}
