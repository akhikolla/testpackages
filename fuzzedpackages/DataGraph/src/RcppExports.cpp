// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// writeDTable
void writeDTable(const std::string& path, SEXP data);
RcppExport SEXP _DataGraph_writeDTable(SEXP pathSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    writeDTable(path, data);
    return R_NilValue;
END_RCPP
}
// openDTable
void openDTable(const std::string& path);
RcppExport SEXP _DataGraph_openDTable(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    openDTable(path);
    return R_NilValue;
END_RCPP
}
// syncDTable
void syncDTable(const std::string& path);
RcppExport SEXP _DataGraph_syncDTable(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    syncDTable(path);
    return R_NilValue;
END_RCPP
}
// closeDTable
void closeDTable(const std::string& path);
RcppExport SEXP _DataGraph_closeDTable(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    closeDTable(path);
    return R_NilValue;
END_RCPP
}
// addDTable
void addDTable(const std::string& path, SEXP data);
RcppExport SEXP _DataGraph_addDTable(SEXP pathSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    addDTable(path, data);
    return R_NilValue;
END_RCPP
}
// openDTBin
void openDTBin(const std::string& path);
RcppExport SEXP _DataGraph_openDTBin(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    openDTBin(path);
    return R_NilValue;
END_RCPP
}
// closeDTBin
void closeDTBin(const std::string& path);
RcppExport SEXP _DataGraph_closeDTBin(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    closeDTBin(path);
    return R_NilValue;
END_RCPP
}
// syncDTBin
void syncDTBin(const std::string& path);
RcppExport SEXP _DataGraph_syncDTBin(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    syncDTBin(path);
    return R_NilValue;
END_RCPP
}
// infoDTBin
void infoDTBin(const std::string& path);
RcppExport SEXP _DataGraph_infoDTBin(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    infoDTBin(path);
    return R_NilValue;
END_RCPP
}
// addDTBin
void addDTBin(const std::string& path, const std::string& name, SEXP data, double time);
RcppExport SEXP _DataGraph_addDTBin(SEXP pathSEXP, SEXP nameSEXP, SEXP dataSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type name(nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    addDTBin(path, name, data, time);
    return R_NilValue;
END_RCPP
}
