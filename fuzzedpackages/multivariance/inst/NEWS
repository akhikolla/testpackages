

Changes in version 2.4.0
========================

Updates
 * extended/updated documentation
 * adaptation to stricter checks of R submissions
 * speedup of 'pearson_approx', 'multivariance.test' and some more

New Features
 * 'multivariance.test' has now the p-value option "pearson_unif" for fast tests with precalculated paramters in the case of univariate unifomly distributed marginals, e.g. given by copulas
 * 'Mcor' is an alias for 'multicorrelation'
 * 'CMcor' is an alias for 'copula.multicorrelation'

Changes in version 2.3.0
========================

Changes
 * 'multicorrelation' the default options and available arguments have changed.
 * 'multivariance.test' uses now the fast and approximately sharp 'pearson_approx' as default for the p-value approximation, instead of the very fast and conservative 'distribution_free'.

New Features
 * bias corrected estimators are now implemented (and standard) in 'multicorrelation'
 * functions using the "copula version of multivariance" are now included: 'emp.transf' Monte Carlo empirical transform, 'copula.multivariance' copula multivariance, 'copula.multicorrelation' copula multicorrelation, 'copula.multicorrelation.test' tests for independence based on copula multivariance. Formally these act just alias for the standard functions applied to 'emp.transf' of the data.
 * 'coins' has now an option 'type' which allows to switch the type of events considered.

Updates
 * Some basic input checks
 * documentation
 * 'multicorrelation' provides for special cases now a more detailed error description

Outdated
 * the function 'independence.test' is marked as depreciated, instead use: 'multivariance.test' as a general interface

Changes in Version 2.2.0
========================

New Features
 * 'dependence.structure' has now a more detailed 'verbose' output. It provides also directly an estimate of the type I error for the detected structure. Moreover, the detection can now also be based on resampling ("type = 'resample'"), Pearson's approximation ("type = 'pearson_approx'") or a consistent estimator ("type = 'consistent'"). Instead of the clustered dependence structure also the full dependence structure ("structure.type = 'full'") can be detected.
 * 'layout_on_circles' provides a special layout for dependence structure graphs. The variables are placed on an outer circle and the dependency nodes are placed on an inner circle. This seems in particular useful for the sometimes overwhelming full dependence structure.
 * 'pearson.pvalue' allows now the option "type = 'all'" for simultaneous p-value computations of multivariance, 2-, 3-multivariance and total multivariance
 * The moment based tail estimate for positive Gaussian quadratic forms 'pearson.qf' has been extended, using the argument "verbose=TRUE" a warning is given if the data had to be sanitized.

Fixed
 * when using the 'vec' argument in 'resample.multivariance' the resampled values are now always compared to the correct multivariance (using the same 'vec') - this also fixes the resampling tests in this setting.
 * 'multivariances.all' returned an overexcited warning in some special cases (in R 3.6.0). Moreover, due to different implementations multivariance and 2-multivariance could differ (within tolerance) in the case of 2 variables, now they return in this case the same value to avoid confusion. Similarly for multivariance and 3-multivariance in the case of 3 variables.

Updated
 * updates in 'dependence.structure', 'find.cluster', 'clean.graph'
 * further speed improvements (in Pearson's approximation)
 * documentation

Changes in Version 2.1.0
========================

New Features
 * 'sample.cols' and 'sample.cdms' have now the option "incl.first" to select if the first component should also be resampled. The resampling of the first component is not necessary for the methods here, but it might be useful in other cases. Moreover, now using both methods (started with the same seed and parameter) yield the same results.
 * When using Pearson's approximation (e.g. in 'test.multivariance') for samples with constant random variables, now (besides the warning that constants are always independent) also a proper p-value approximation is computed.

Updated
 * improved documentation

Fixed
 * 'multivariances.all' produced an error if x was a list and vec contained NA.


Changes in Version 2.0.0
========================

New Features
 * new function 'multivariance.test' which provides all multivariance related tests - providing a unified interface with return values as they are common for tests in R, in particular, the p.value and the value of the test statistic. The return value is of class "htest" (as it is standard for other hypothesis tests, e.g. ks.test, t.test).
 * 'cdm' has now the argument "external.dm.fun" which can be used to pass an external function for the computation of the distance matrix (allowing major speed ups for non standard distances)
 * 'multivariances.all' has now named return values
 * 'resample.multivariance' works now also with 'type="all"', for simultaneous computation of p.values of multivariance, total-multivariance, 2-multivariance and 3-multivariance
 * 'multicorrelation' computes now various types of multicorrelations.
 * 'multivariance.timing' provides methods for detailed estimation of the computation time, which might be useful e.g. when planing simulation studies.

Changes
 * 'multicorrelation' has now different defaults and new arguments.
 * the centered distance matrices are now stored in a list rather than a 3-dim array. Thus the return value of 'cdms' was changed, and correspondingly the arguments of all '*.multivariance' functions.

Updated
 * major speedup
 * 'multivariance.pvalue' accepts and returns NA and NaN
 * 'm.multivariance' returns NA when 3-multivariance is used for only 2 variables.

Fixed
 * 'pearson.pvalue' partially ignored the option "type". It always used the test statistic of multivariance, despite the fact the parameters were computed for the given "type".
 * the option "verbose" in 'dependence.structure' now works as expected

Changes in Version 1.2.1
========================

Updates
 * updated references
 * various typos corrected


Changes in Version 1.2.0
========================

New Features
 * 'independence.test' is now also implemented with type "pearson_approx". Providing the fast p-value approximation developed in <arXiv:1808.07280>. For this also the functions 'pearson.qf' (a Gaussian quadratic form estimate based on mean, variance and skewness) and 'pearson.pvalue' (the corresponding p-value estimate based on new moment estimators) are introduced.
 * In "cmd" one can now explicitly specify the use of "isotropic" continuous negative definite functions. This speeds up the calculation for this case by a factor of about 100.

Fixed
 * the option "squared" works now also for multivariance with option "correlation=TRUE".
 * 'multivariances.all' returns NA for 3-multivariance if only two variables are given.

Updates
 * speed up of various functions
 * various typos corrected


Changes in Version 1.1.0
========================
New Features
  * 'm.multivariance' a function to calculate the m-multivariance
  * 'multivariances.all' a function to calculate standard/total/m-multivariance simultaneously
  * 'resample.multivariance' implements the resampling method which can be used to get less conservative tests than the distribution-free methods
  * 'dependence.structure' a function to generate a graphical model of the dependence structure
  * various examples of the use of 'dependence.structure'

Changes
  * The standard output of 'multivariance' is now (distance multivariance squared) scaled by the sample size. Use 'Nscale = FALSE' to get the value without this scaling. The reason for this was twofold: 1. it is now the same setting as for 'total.multivariance'. 2. This is the only value which can (roughly) be interpreted without further calculations.

Updates
  * improved documentation. In particular, it is now clearly stated that the squared values are the standard output of 'multivariance' and 'total.multivariance'
  * some speed up


Changes in Version 1.0.5 2017-11-01
===================================
Details
  * Initial public release


