// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SpicySVM
List SpicySVM(arma::cube K, arma::vec yapp, double C, double tol, double tolInner, int OuterMaxIter, int InnerMaxIter, double calpha);
RcppExport SEXP _RMKL_SpicySVM(SEXP KSEXP, SEXP yappSEXP, SEXP CSEXP, SEXP tolSEXP, SEXP tolInnerSEXP, SEXP OuterMaxIterSEXP, SEXP InnerMaxIterSEXP, SEXP calphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yapp(yappSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type tolInner(tolInnerSEXP);
    Rcpp::traits::input_parameter< int >::type OuterMaxIter(OuterMaxIterSEXP);
    Rcpp::traits::input_parameter< int >::type InnerMaxIter(InnerMaxIterSEXP);
    Rcpp::traits::input_parameter< double >::type calpha(calphaSEXP);
    rcpp_result_gen = Rcpp::wrap(SpicySVM(K, yapp, C, tol, tolInner, OuterMaxIter, InnerMaxIter, calpha));
    return rcpp_result_gen;
END_RCPP
}
// SpicyLogit
List SpicyLogit(arma::cube K, arma::vec yapp, double C, double tol, double tolInner, int OuterMaxIter, int InnerMaxIter, double calpha);
RcppExport SEXP _RMKL_SpicyLogit(SEXP KSEXP, SEXP yappSEXP, SEXP CSEXP, SEXP tolSEXP, SEXP tolInnerSEXP, SEXP OuterMaxIterSEXP, SEXP InnerMaxIterSEXP, SEXP calphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yapp(yappSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type tolInner(tolInnerSEXP);
    Rcpp::traits::input_parameter< int >::type OuterMaxIter(OuterMaxIterSEXP);
    Rcpp::traits::input_parameter< int >::type InnerMaxIter(InnerMaxIterSEXP);
    Rcpp::traits::input_parameter< double >::type calpha(calphaSEXP);
    rcpp_result_gen = Rcpp::wrap(SpicyLogit(K, yapp, C, tol, tolInner, OuterMaxIter, InnerMaxIter, calpha));
    return rcpp_result_gen;
END_RCPP
}
// predictspicy
arma::vec predictspicy(arma::mat alpha, double b, arma::cube k0);
RcppExport SEXP _RMKL_predictspicy(SEXP alphaSEXP, SEXP bSEXP, SEXP k0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type k0(k0SEXP);
    rcpp_result_gen = Rcpp::wrap(predictspicy(alpha, b, k0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RMKL_SpicySVM", (DL_FUNC) &_RMKL_SpicySVM, 8},
    {"_RMKL_SpicyLogit", (DL_FUNC) &_RMKL_SpicyLogit, 8},
    {"_RMKL_predictspicy", (DL_FUNC) &_RMKL_predictspicy, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RMKL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
