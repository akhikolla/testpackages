// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dist_cpp
arma::mat dist_cpp(const arma::mat& loc1, const arma::mat& loc2, const bool& geographic);
RcppExport SEXP _intkrige_dist_cpp(SEXP loc1SEXP, SEXP loc2SEXP, SEXP geographicSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type loc1(loc1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type loc2(loc2SEXP);
    Rcpp::traits::input_parameter< const bool& >::type geographic(geographicSEXP);
    rcpp_result_gen = Rcpp::wrap(dist_cpp(loc1, loc2, geographic));
    return rcpp_result_gen;
END_RCPP
}
// nrStep
arma::colvec nrStep(const arma::colvec& lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& pen);
RcppExport SEXP _intkrige_nrStep(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type pen(penSEXP);
    rcpp_result_gen = Rcpp::wrap(nrStep(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, pen));
    return rcpp_result_gen;
END_RCPP
}
// nrStep_long
arma::colvec nrStep_long(const arma::colvec& lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& pen, const double& len);
RcppExport SEXP _intkrige_nrStep_long(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP penSEXP, SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type pen(penSEXP);
    Rcpp::traits::input_parameter< const double& >::type len(lenSEXP);
    rcpp_result_gen = Rcpp::wrap(nrStep_long(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, pen, len));
    return rcpp_result_gen;
END_RCPP
}
// nrStep_2
arma::colvec nrStep_2(const arma::colvec& lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& r, const double& threshold, const double& len);
RcppExport SEXP _intkrige_nrStep_2(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP rSEXP, SEXP thresholdSEXP, SEXP lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double& >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< const double& >::type len(lenSEXP);
    rcpp_result_gen = Rcpp::wrap(nrStep_2(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, r, threshold, len));
    return rcpp_result_gen;
END_RCPP
}
// newRap
arma::colvec newRap(arma::colvec lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& threshold, const double& tolq, const int& maxq, const double& tolp, const int& maxp, const double& eta);
RcppExport SEXP _intkrige_newRap(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP thresholdSEXP, SEXP tolqSEXP, SEXP maxqSEXP, SEXP tolpSEXP, SEXP maxpSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolq(tolqSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxq(maxqSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolp(tolpSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxp(maxpSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(newRap(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, threshold, tolq, maxq, tolp, maxp, eta));
    return rcpp_result_gen;
END_RCPP
}
// newRap_long
arma::colvec newRap_long(arma::colvec lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& threshold, const double& tolq, const int& maxq, const double& tolp, const int& maxp, const double& eta, const double& r);
RcppExport SEXP _intkrige_newRap_long(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP thresholdSEXP, SEXP tolqSEXP, SEXP maxqSEXP, SEXP tolpSEXP, SEXP maxpSEXP, SEXP etaSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolq(tolqSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxq(maxqSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolp(tolpSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxp(maxpSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(newRap_long(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, threshold, tolq, maxq, tolp, maxp, eta, r));
    return rcpp_result_gen;
END_RCPP
}
// newRap_2
arma::colvec newRap_2(arma::colvec lam, const arma::mat& pCovC, const arma::colvec& lCovC, const arma::mat& pCovR, const arma::colvec& lCovR, const arma::mat& pCovCR, const arma::colvec& lCovCR, const arma::colvec& A, const double& threshold, const double& tolq, const int& maxq, const double& tolp, const int& maxp, const double& eta, double r);
RcppExport SEXP _intkrige_newRap_2(SEXP lamSEXP, SEXP pCovCSEXP, SEXP lCovCSEXP, SEXP pCovRSEXP, SEXP lCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCRSEXP, SEXP ASEXP, SEXP thresholdSEXP, SEXP tolqSEXP, SEXP maxqSEXP, SEXP tolpSEXP, SEXP maxpSEXP, SEXP etaSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolq(tolqSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxq(maxqSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolp(tolpSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxp(maxpSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(newRap_2(lam, pCovC, lCovC, pCovR, lCovR, pCovCR, lCovCR, A, threshold, tolq, maxq, tolp, maxp, eta, r));
    return rcpp_result_gen;
END_RCPP
}
// nrShell
arma::mat nrShell(const arma::mat& pCovC, const arma::mat& pCovR, const arma::mat& pCovCR, const arma::mat& lCovC, const arma::mat& lCovR, const arma::mat& lCovCR, const arma::mat& values, const arma::colvec& A, const double& thresh, const double& tolq, const int& maxq, const double& tolp, const int& maxp, const double& eta, double r, double trend, const bool& fast);
RcppExport SEXP _intkrige_nrShell(SEXP pCovCSEXP, SEXP pCovRSEXP, SEXP pCovCRSEXP, SEXP lCovCSEXP, SEXP lCovRSEXP, SEXP lCovCRSEXP, SEXP valuesSEXP, SEXP ASEXP, SEXP threshSEXP, SEXP tolqSEXP, SEXP maxqSEXP, SEXP tolpSEXP, SEXP maxpSEXP, SEXP etaSEXP, SEXP rSEXP, SEXP trendSEXP, SEXP fastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovC(pCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovR(pCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type pCovCR(pCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lCovC(lCovCSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lCovR(lCovRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lCovCR(lCovCRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const double& >::type thresh(threshSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolq(tolqSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxq(maxqSEXP);
    Rcpp::traits::input_parameter< const double& >::type tolp(tolpSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxp(maxpSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type trend(trendSEXP);
    Rcpp::traits::input_parameter< const bool& >::type fast(fastSEXP);
    rcpp_result_gen = Rcpp::wrap(nrShell(pCovC, pCovR, pCovCR, lCovC, lCovR, lCovCR, values, A, thresh, tolq, maxq, tolp, maxp, eta, r, trend, fast));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_intkrige_dist_cpp", (DL_FUNC) &_intkrige_dist_cpp, 3},
    {"_intkrige_nrStep", (DL_FUNC) &_intkrige_nrStep, 9},
    {"_intkrige_nrStep_long", (DL_FUNC) &_intkrige_nrStep_long, 10},
    {"_intkrige_nrStep_2", (DL_FUNC) &_intkrige_nrStep_2, 11},
    {"_intkrige_newRap", (DL_FUNC) &_intkrige_newRap, 14},
    {"_intkrige_newRap_long", (DL_FUNC) &_intkrige_newRap_long, 15},
    {"_intkrige_newRap_2", (DL_FUNC) &_intkrige_newRap_2, 15},
    {"_intkrige_nrShell", (DL_FUNC) &_intkrige_nrShell, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_intkrige(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
