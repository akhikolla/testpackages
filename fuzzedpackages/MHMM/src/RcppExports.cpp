// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// EMmhmmCPP
List EMmhmmCPP(const S4 yiR, List paramR, const double tolR, const double nbKeepR, const double itersmallR);
RcppExport SEXP _MHMM_EMmhmmCPP(SEXP yiRSEXP, SEXP paramRSEXP, SEXP tolRSEXP, SEXP nbKeepRSEXP, SEXP itersmallRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const S4 >::type yiR(yiRSEXP);
    Rcpp::traits::input_parameter< List >::type paramR(paramRSEXP);
    Rcpp::traits::input_parameter< const double >::type tolR(tolRSEXP);
    Rcpp::traits::input_parameter< const double >::type nbKeepR(nbKeepRSEXP);
    Rcpp::traits::input_parameter< const double >::type itersmallR(itersmallRSEXP);
    rcpp_result_gen = Rcpp::wrap(EMmhmmCPP(yiR, paramR, tolR, nbKeepR, itersmallR));
    return rcpp_result_gen;
END_RCPP
}
// oneEMgammaCPP
List oneEMgammaCPP(const NumericVector& my_xs, const NumericVector& my_ws, const int g, const NumericVector& val);
RcppExport SEXP _MHMM_oneEMgammaCPP(SEXP my_xsSEXP, SEXP my_wsSEXP, SEXP gSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type my_xs(my_xsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type my_ws(my_wsSEXP);
    Rcpp::traits::input_parameter< const int >::type g(gSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(oneEMgammaCPP(my_xs, my_ws, g, val));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MHMM_EMmhmmCPP", (DL_FUNC) &_MHMM_EMmhmmCPP, 5},
    {"_MHMM_oneEMgammaCPP", (DL_FUNC) &_MHMM_oneEMgammaCPP, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_MHMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
