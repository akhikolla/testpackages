// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// PhenoFlex
List PhenoFlex(NumericVector temp, NumericVector times, const double A0, const double A1, const double E0, const double E1, const double slope, const double Tf, const double s1, const double Tu, const double Tb, const double Tc, const double yc, const double Delta, const int Imodel, const double zc, bool stopatzc, bool deg_celsius, bool basic_output);
RcppExport SEXP _chillR_PhenoFlex(SEXP tempSEXP, SEXP timesSEXP, SEXP A0SEXP, SEXP A1SEXP, SEXP E0SEXP, SEXP E1SEXP, SEXP slopeSEXP, SEXP TfSEXP, SEXP s1SEXP, SEXP TuSEXP, SEXP TbSEXP, SEXP TcSEXP, SEXP ycSEXP, SEXP DeltaSEXP, SEXP ImodelSEXP, SEXP zcSEXP, SEXP stopatzcSEXP, SEXP deg_celsiusSEXP, SEXP basic_outputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type temp(tempSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< const double >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< const double >::type A1(A1SEXP);
    Rcpp::traits::input_parameter< const double >::type E0(E0SEXP);
    Rcpp::traits::input_parameter< const double >::type E1(E1SEXP);
    Rcpp::traits::input_parameter< const double >::type slope(slopeSEXP);
    Rcpp::traits::input_parameter< const double >::type Tf(TfSEXP);
    Rcpp::traits::input_parameter< const double >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< const double >::type Tu(TuSEXP);
    Rcpp::traits::input_parameter< const double >::type Tb(TbSEXP);
    Rcpp::traits::input_parameter< const double >::type Tc(TcSEXP);
    Rcpp::traits::input_parameter< const double >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< const double >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< const int >::type Imodel(ImodelSEXP);
    Rcpp::traits::input_parameter< const double >::type zc(zcSEXP);
    Rcpp::traits::input_parameter< bool >::type stopatzc(stopatzcSEXP);
    Rcpp::traits::input_parameter< bool >::type deg_celsius(deg_celsiusSEXP);
    Rcpp::traits::input_parameter< bool >::type basic_output(basic_outputSEXP);
    rcpp_result_gen = Rcpp::wrap(PhenoFlex(temp, times, A0, A1, E0, E1, slope, Tf, s1, Tu, Tb, Tc, yc, Delta, Imodel, zc, stopatzc, deg_celsius, basic_output));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_chillR_PhenoFlex", (DL_FUNC) &_chillR_PhenoFlex, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_chillR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
