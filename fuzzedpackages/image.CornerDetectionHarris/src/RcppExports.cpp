// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// detect_corners
SEXP detect_corners(Rcpp::NumericVector x, int nx, int ny, float k, float sigma_d, float sigma_i, float threshold, int gaussian, int gradient, int strategy, int Nselect, int measure, int Nscales, int precision, int cells, int verbose);
RcppExport SEXP _image_CornerDetectionHarris_detect_corners(SEXP xSEXP, SEXP nxSEXP, SEXP nySEXP, SEXP kSEXP, SEXP sigma_dSEXP, SEXP sigma_iSEXP, SEXP thresholdSEXP, SEXP gaussianSEXP, SEXP gradientSEXP, SEXP strategySEXP, SEXP NselectSEXP, SEXP measureSEXP, SEXP NscalesSEXP, SEXP precisionSEXP, SEXP cellsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nx(nxSEXP);
    Rcpp::traits::input_parameter< int >::type ny(nySEXP);
    Rcpp::traits::input_parameter< float >::type k(kSEXP);
    Rcpp::traits::input_parameter< float >::type sigma_d(sigma_dSEXP);
    Rcpp::traits::input_parameter< float >::type sigma_i(sigma_iSEXP);
    Rcpp::traits::input_parameter< float >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type gaussian(gaussianSEXP);
    Rcpp::traits::input_parameter< int >::type gradient(gradientSEXP);
    Rcpp::traits::input_parameter< int >::type strategy(strategySEXP);
    Rcpp::traits::input_parameter< int >::type Nselect(NselectSEXP);
    Rcpp::traits::input_parameter< int >::type measure(measureSEXP);
    Rcpp::traits::input_parameter< int >::type Nscales(NscalesSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type cells(cellsSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(detect_corners(x, nx, ny, k, sigma_d, sigma_i, threshold, gaussian, gradient, strategy, Nselect, measure, Nscales, precision, cells, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_image_CornerDetectionHarris_detect_corners", (DL_FUNC) &_image_CornerDetectionHarris_detect_corners, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_image_CornerDetectionHarris(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
