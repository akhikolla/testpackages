// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// prodCpp
Eigen::MatrixXd prodCpp(const Eigen::Map<Eigen::MatrixXd>& B, const Eigen::Map<Eigen::MatrixXd>& C);
RcppExport SEXP _SmartSVA_prodCpp(SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(prodCpp(B, C));
    return rcpp_result_gen;
END_RCPP
}
// crossprodCpp
Eigen::MatrixXd crossprodCpp(const Eigen::Map<Eigen::MatrixXd>& A);
RcppExport SEXP _SmartSVA_crossprodCpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(crossprodCpp(A));
    return rcpp_result_gen;
END_RCPP
}
// tcrossprodCpp
Eigen::MatrixXd tcrossprodCpp(const Eigen::Map<Eigen::MatrixXd>& B, const Eigen::Map<Eigen::MatrixXd>& C);
RcppExport SEXP _SmartSVA_tcrossprodCpp(SEXP BSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(tcrossprodCpp(B, C));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SmartSVA_prodCpp", (DL_FUNC) &_SmartSVA_prodCpp, 2},
    {"_SmartSVA_crossprodCpp", (DL_FUNC) &_SmartSVA_crossprodCpp, 1},
    {"_SmartSVA_tcrossprodCpp", (DL_FUNC) &_SmartSVA_tcrossprodCpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SmartSVA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
