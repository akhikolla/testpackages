// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// FDRregCPP
SEXP FDRregCPP(NumericVector z, const arma::mat& X, NumericVector M0, NumericVector MTot, const arma::mat& PriorPrecision, const arma::vec& PriorMean, int nmc, int nburn);
RcppExport SEXP _FDRreg_FDRregCPP(SEXP zSEXP, SEXP XSEXP, SEXP M0SEXP, SEXP MTotSEXP, SEXP PriorPrecisionSEXP, SEXP PriorMeanSEXP, SEXP nmcSEXP, SEXP nburnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type M0(M0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type MTot(MTotSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type PriorPrecision(PriorPrecisionSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type PriorMean(PriorMeanSEXP);
    Rcpp::traits::input_parameter< int >::type nmc(nmcSEXP);
    Rcpp::traits::input_parameter< int >::type nburn(nburnSEXP);
    rcpp_result_gen = Rcpp::wrap(FDRregCPP(z, X, M0, MTot, PriorPrecision, PriorMean, nmc, nburn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FDRreg_FDRregCPP", (DL_FUNC) &_FDRreg_FDRregCPP, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_FDRreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
