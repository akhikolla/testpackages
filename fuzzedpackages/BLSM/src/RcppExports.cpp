// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// dst
Eigen::MatrixXd dst(const Eigen::Map<Eigen::MatrixXd> M);
RcppExport SEXP _BLSM_dst(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd> >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dst(M));
    return rcpp_result_gen;
END_RCPP
}
// lpz_dist
Eigen::MatrixXd lpz_dist(Eigen::MatrixXd Z);
RcppExport SEXP _BLSM_lpz_dist(SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(lpz_dist(Z));
    return rcpp_result_gen;
END_RCPP
}
// lpY
double lpY(Eigen::MatrixXd Y, Eigen::MatrixXd lpz, double alpha, Eigen::MatrixXd W);
RcppExport SEXP _BLSM_lpY(SEXP YSEXP, SEXP lpzSEXP, SEXP alphaSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type lpz(lpzSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(lpY(Y, lpz, alpha, W));
    return rcpp_result_gen;
END_RCPP
}
// mlpY
double mlpY(Eigen::VectorXd avZ, Eigen::MatrixXd Y, Eigen::MatrixXd W);
RcppExport SEXP _BLSM_mlpY(SEXP avZSEXP, SEXP YSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type avZ(avZSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(mlpY(avZ, Y, W));
    return rcpp_result_gen;
END_RCPP
}
// lpz_distNODE
Eigen::VectorXd lpz_distNODE(Eigen::MatrixXd Z, int node, Eigen::VectorXd diag);
RcppExport SEXP _BLSM_lpz_distNODE(SEXP ZSEXP, SEXP nodeSEXP, SEXP diagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< int >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type diag(diagSEXP);
    rcpp_result_gen = Rcpp::wrap(lpz_distNODE(Z, node, diag));
    return rcpp_result_gen;
END_RCPP
}
// lpYNODE
double lpYNODE(Eigen::MatrixXd Y, Eigen::MatrixXd Z, double alpha, int node, Eigen::VectorXd diag, Eigen::MatrixXd W);
RcppExport SEXP _BLSM_lpYNODE(SEXP YSEXP, SEXP ZSEXP, SEXP alphaSEXP, SEXP nodeSEXP, SEXP diagSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type node(nodeSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type diag(diagSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(lpYNODE(Y, Z, alpha, node, diag, W));
    return rcpp_result_gen;
END_RCPP
}
// Z_up
Eigen::MatrixXd Z_up(Eigen::MatrixXd Y, Eigen::MatrixXd Z, Eigen::MatrixXd W, double alpha, double zdelta, double mu_z, double sd_z);
RcppExport SEXP _BLSM_Z_up(SEXP YSEXP, SEXP ZSEXP, SEXP WSEXP, SEXP alphaSEXP, SEXP zdeltaSEXP, SEXP mu_zSEXP, SEXP sd_zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type zdelta(zdeltaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_z(mu_zSEXP);
    Rcpp::traits::input_parameter< double >::type sd_z(sd_zSEXP);
    rcpp_result_gen = Rcpp::wrap(Z_up(Y, Z, W, alpha, zdelta, mu_z, sd_z));
    return rcpp_result_gen;
END_RCPP
}
// alpha_up
double alpha_up(Eigen::MatrixXd Y, Eigen::MatrixXd lpz, Eigen::MatrixXd W, double alpha, double adelta, double a_a, double a_b);
RcppExport SEXP _BLSM_alpha_up(SEXP YSEXP, SEXP lpzSEXP, SEXP WSEXP, SEXP alphaSEXP, SEXP adeltaSEXP, SEXP a_aSEXP, SEXP a_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type lpz(lpzSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type adelta(adeltaSEXP);
    Rcpp::traits::input_parameter< double >::type a_a(a_aSEXP);
    Rcpp::traits::input_parameter< double >::type a_b(a_bSEXP);
    rcpp_result_gen = Rcpp::wrap(alpha_up(Y, lpz, W, alpha, adelta, a_a, a_b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BLSM_dst", (DL_FUNC) &_BLSM_dst, 1},
    {"_BLSM_lpz_dist", (DL_FUNC) &_BLSM_lpz_dist, 1},
    {"_BLSM_lpY", (DL_FUNC) &_BLSM_lpY, 4},
    {"_BLSM_mlpY", (DL_FUNC) &_BLSM_mlpY, 3},
    {"_BLSM_lpz_distNODE", (DL_FUNC) &_BLSM_lpz_distNODE, 3},
    {"_BLSM_lpYNODE", (DL_FUNC) &_BLSM_lpYNODE, 6},
    {"_BLSM_Z_up", (DL_FUNC) &_BLSM_Z_up, 7},
    {"_BLSM_alpha_up", (DL_FUNC) &_BLSM_alpha_up, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_BLSM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
