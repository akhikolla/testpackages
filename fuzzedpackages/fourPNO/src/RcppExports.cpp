// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rmvnorm
arma::mat rmvnorm(unsigned int n, const arma::vec& mu, const arma::mat& sigma);
RcppExport SEXP _fourPNO_rmvnorm(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// min2LL_4pno
double min2LL_4pno(unsigned int N, unsigned int J, const arma::mat& Y, const arma::vec& as, const arma::vec& bs, const arma::vec& gs, const arma::vec& ss, const arma::vec& theta);
RcppExport SEXP _fourPNO_min2LL_4pno(SEXP NSEXP, SEXP JSEXP, SEXP YSEXP, SEXP asSEXP, SEXP bsSEXP, SEXP gsSEXP, SEXP ssSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type as(asSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type bs(bsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gs(gsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(min2LL_4pno(N, J, Y, as, bs, gs, ss, theta));
    return rcpp_result_gen;
END_RCPP
}
// Y_4pno_simulate
arma::mat Y_4pno_simulate(unsigned int N, unsigned int J, const arma::vec& as, const arma::vec& bs, const arma::vec& gs, const arma::vec& ss, const arma::vec& theta);
RcppExport SEXP _fourPNO_Y_4pno_simulate(SEXP NSEXP, SEXP JSEXP, SEXP asSEXP, SEXP bsSEXP, SEXP gsSEXP, SEXP ssSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type as(asSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type bs(bsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gs(gsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(Y_4pno_simulate(N, J, as, bs, gs, ss, theta));
    return rcpp_result_gen;
END_RCPP
}
// Total_Tabulate
arma::uvec Total_Tabulate(unsigned int N, unsigned int J, const arma::mat Y);
RcppExport SEXP _fourPNO_Total_Tabulate(SEXP NSEXP, SEXP JSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(Total_Tabulate(N, J, Y));
    return rcpp_result_gen;
END_RCPP
}
// Gibbs_4PNO
Rcpp::List Gibbs_4PNO(const arma::mat& Y, const arma::vec& mu_xi, const arma::mat& Sigma_xi_inv, const double& mu_theta, const double& Sigma_theta_inv, double alpha_c, double beta_c, double alpha_s, double beta_s, unsigned int burnin, const arma::vec& cTF, const arma::vec& sTF, unsigned int gwg_reps, unsigned int chain_length);
RcppExport SEXP _fourPNO_Gibbs_4PNO(SEXP YSEXP, SEXP mu_xiSEXP, SEXP Sigma_xi_invSEXP, SEXP mu_thetaSEXP, SEXP Sigma_theta_invSEXP, SEXP alpha_cSEXP, SEXP beta_cSEXP, SEXP alpha_sSEXP, SEXP beta_sSEXP, SEXP burninSEXP, SEXP cTFSEXP, SEXP sTFSEXP, SEXP gwg_repsSEXP, SEXP chain_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_xi(mu_xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma_xi_inv(Sigma_xi_invSEXP);
    Rcpp::traits::input_parameter< const double& >::type mu_theta(mu_thetaSEXP);
    Rcpp::traits::input_parameter< const double& >::type Sigma_theta_inv(Sigma_theta_invSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_c(alpha_cSEXP);
    Rcpp::traits::input_parameter< double >::type beta_c(beta_cSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_s(alpha_sSEXP);
    Rcpp::traits::input_parameter< double >::type beta_s(beta_sSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type cTF(cTFSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sTF(sTFSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type gwg_reps(gwg_repsSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type chain_length(chain_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(Gibbs_4PNO(Y, mu_xi, Sigma_xi_inv, mu_theta, Sigma_theta_inv, alpha_c, beta_c, alpha_s, beta_s, burnin, cTF, sTF, gwg_reps, chain_length));
    return rcpp_result_gen;
END_RCPP
}
// Gibbs_2PNO
Rcpp::List Gibbs_2PNO(const arma::mat& Y, const arma::vec& mu_xi, const arma::mat& Sigma_xi_inv, const double& mu_theta, const double& Sigma_theta_inv, unsigned int burnin, unsigned int chain_length);
RcppExport SEXP _fourPNO_Gibbs_2PNO(SEXP YSEXP, SEXP mu_xiSEXP, SEXP Sigma_xi_invSEXP, SEXP mu_thetaSEXP, SEXP Sigma_theta_invSEXP, SEXP burninSEXP, SEXP chain_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_xi(mu_xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma_xi_inv(Sigma_xi_invSEXP);
    Rcpp::traits::input_parameter< const double& >::type mu_theta(mu_thetaSEXP);
    Rcpp::traits::input_parameter< const double& >::type Sigma_theta_inv(Sigma_theta_invSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type chain_length(chain_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(Gibbs_2PNO(Y, mu_xi, Sigma_xi_inv, mu_theta, Sigma_theta_inv, burnin, chain_length));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fourPNO_rmvnorm", (DL_FUNC) &_fourPNO_rmvnorm, 3},
    {"_fourPNO_min2LL_4pno", (DL_FUNC) &_fourPNO_min2LL_4pno, 8},
    {"_fourPNO_Y_4pno_simulate", (DL_FUNC) &_fourPNO_Y_4pno_simulate, 7},
    {"_fourPNO_Total_Tabulate", (DL_FUNC) &_fourPNO_Total_Tabulate, 3},
    {"_fourPNO_Gibbs_4PNO", (DL_FUNC) &_fourPNO_Gibbs_4PNO, 14},
    {"_fourPNO_Gibbs_2PNO", (DL_FUNC) &_fourPNO_Gibbs_2PNO, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_fourPNO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
