// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// is_overlap
SEXP is_overlap(SEXP x11, SEXP y11, SEXP sw11, SEXP sh11, SEXP boxes1);
RcppExport SEXP _wordcloud_is_overlap(SEXP x11SEXP, SEXP y11SEXP, SEXP sw11SEXP, SEXP sh11SEXP, SEXP boxes1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x11(x11SEXP);
    Rcpp::traits::input_parameter< SEXP >::type y11(y11SEXP);
    Rcpp::traits::input_parameter< SEXP >::type sw11(sw11SEXP);
    Rcpp::traits::input_parameter< SEXP >::type sh11(sh11SEXP);
    Rcpp::traits::input_parameter< SEXP >::type boxes1(boxes1SEXP);
    rcpp_result_gen = Rcpp::wrap(is_overlap(x11, y11, sw11, sh11, boxes1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wordcloud_is_overlap", (DL_FUNC) &_wordcloud_is_overlap, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_wordcloud(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
