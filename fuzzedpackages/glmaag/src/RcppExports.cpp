// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Coxnet
arma::vec Coxnet(arma::vec b, arma::mat& x, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l, int maxiter, double cri);
RcppExport SEXP _glmaag_Coxnet(SEXP bSEXP, SEXP xSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(Coxnet(b, x, tie, tie1, tie2, tie3, del, l, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// Coxaagg
arma::vec Coxaagg(arma::vec b, double lam1, double lam2, int ntie, arma::vec w, arma::mat x, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat l, arma::vec dl, int maxiter, double cri);
RcppExport SEXP _glmaag_Coxaagg(SEXP bSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP ntieSEXP, SEXP wSEXP, SEXP xSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(Coxaagg(b, lam1, lam2, ntie, w, x, tie, tie1, tie2, tie3, del, l, dl, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxnet1
arma::cube cvCoxnet1(int nf, arma::vec b, arma::mat& x, arma::vec& y, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l1, arma::mat& l2, arma::vec& lam2, arma::vec& bets, arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxnet1(SEXP nfSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxnet1(nf, b, x, y, tie, tie1, tie2, tie3, del, l1, l2, lam2, bets, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxnet1_pal
arma::mat cvCoxnet1_pal(arma::vec b, arma::mat x, arma::mat xtr, arma::mat xva, arma::vec yva, bool tie, arma::uvec tie1, arma::uvec tie2, arma::uvec tie3, bool tietr, arma::uvec tie1tr, arma::uvec tie2tr, arma::uvec tie3tr, arma::vec del, arma::vec deltr, arma::vec delva, arma::mat l1, arma::mat l2, arma::vec lam2, arma::vec bets, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxnet1_pal(SEXP bSEXP, SEXP xSEXP, SEXP xtrSEXP, SEXP xvaSEXP, SEXP yvaSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP tietrSEXP, SEXP tie1trSEXP, SEXP tie2trSEXP, SEXP tie3trSEXP, SEXP delSEXP, SEXP deltrSEXP, SEXP delvaSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< bool >::type tietr(tietrSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1tr(tie1trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2tr(tie2trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3tr(tie3trSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type deltr(deltrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delva(delvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxnet1_pal(b, x, xtr, xva, yva, tie, tie1, tie2, tie3, tietr, tie1tr, tie2tr, tie3tr, del, deltr, delva, l1, l2, lam2, bets, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxnet2
arma::mat cvCoxnet2(int nf, arma::vec& b, arma::mat& x, arma::vec& y, bool tie, int ntie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l, arma::vec& lam, arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxnet2(SEXP nfSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP tieSEXP, SEXP ntieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP lamSEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxnet2(nf, b, x, y, tie, ntie, tie1, tie2, tie3, del, l, lam, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxnet2_pal
arma::vec cvCoxnet2_pal(arma::vec& b, arma::mat& x, arma::mat& xtr, arma::mat& xva, arma::vec& yva, bool tie, int ntie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, bool tietr, int ntietr, arma::uvec& tie1tr, arma::uvec& tie2tr, arma::uvec& tie3tr, arma::vec& del, arma::vec& deltr, arma::vec& delva, arma::mat& l, arma::vec& lam, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxnet2_pal(SEXP bSEXP, SEXP xSEXP, SEXP xtrSEXP, SEXP xvaSEXP, SEXP yvaSEXP, SEXP tieSEXP, SEXP ntieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP tietrSEXP, SEXP ntietrSEXP, SEXP tie1trSEXP, SEXP tie2trSEXP, SEXP tie3trSEXP, SEXP delSEXP, SEXP deltrSEXP, SEXP delvaSEXP, SEXP lSEXP, SEXP lamSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< bool >::type tietr(tietrSEXP);
    Rcpp::traits::input_parameter< int >::type ntietr(ntietrSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1tr(tie1trSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2tr(tie2trSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3tr(tie3trSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type deltr(deltrSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type delva(delvaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxnet2_pal(b, x, xtr, xva, yva, tie, ntie, tie1, tie2, tie3, tietr, ntietr, tie1tr, tie2tr, tie3tr, del, deltr, delva, l, lam, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxaagg
List cvCoxaagg(int nf, int dfmax, int ntie, arma::vec& b, arma::vec& w, arma::mat& x, arma::vec& y, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l, arma::vec& dl, arma::vec& lam1, arma::vec& lam2, arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxaagg(SEXP nfSEXP, SEXP dfmaxSEXP, SEXP ntieSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxaagg(nf, dfmax, ntie, b, w, x, y, tie, tie1, tie2, tie3, del, l, dl, lam1, lam2, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// ssCoxaagg
arma::cube ssCoxaagg(int ntie, arma::vec& b, arma::vec& w, arma::mat& x, arma::vec& y, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l, arma::vec& dl, arma::vec& lam1, arma::vec& lam2, arma::umat& sswhich, int maxiter, double cri);
RcppExport SEXP _glmaag_ssCoxaagg(SEXP ntieSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP sswhichSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::umat& >::type sswhich(sswhichSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(ssCoxaagg(ntie, b, w, x, y, tie, tie1, tie2, tie3, del, l, dl, lam1, lam2, sswhich, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// ssCoxaagg_pal
arma::cube ssCoxaagg_pal(int ntietr, arma::vec b, arma::vec w, arma::mat xtr, bool tietr, arma::uvec tie1tr, arma::uvec tie2tr, arma::uvec tie3tr, arma::vec deltr, arma::mat l, arma::vec dl, arma::vec lam1, arma::vec lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_ssCoxaagg_pal(SEXP ntietrSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xtrSEXP, SEXP tietrSEXP, SEXP tie1trSEXP, SEXP tie2trSEXP, SEXP tie3trSEXP, SEXP deltrSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ntietr(ntietrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< bool >::type tietr(tietrSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1tr(tie1trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2tr(tie2trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3tr(tie3trSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type deltr(deltrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(ssCoxaagg_pal(ntietr, b, w, xtr, tietr, tie1tr, tie2tr, tie3tr, deltr, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// Coxaagg_search
List Coxaagg_search(int ntie, int dfmax, arma::vec b, arma::vec w, arma::mat x, bool tie, arma::uvec tie1, arma::uvec tie2, arma::uvec tie3, arma::vec del, arma::mat l, arma::vec dl, arma::vec lam1, arma::vec lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_Coxaagg_search(SEXP ntieSEXP, SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(Coxaagg_search(ntie, dfmax, b, w, x, tie, tie1, tie2, tie3, del, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// Coxaagg_search_pal
List Coxaagg_search_pal(int ntie, int dfmax, arma::vec b, arma::vec w, arma::mat x, bool tie, arma::uvec tie1, arma::uvec tie2, arma::uvec tie3, arma::vec del, arma::mat l, arma::vec dl, arma::vec lam1, double lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_Coxaagg_search_pal(SEXP ntieSEXP, SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(Coxaagg_search_pal(ntie, dfmax, b, w, x, tie, tie1, tie2, tie3, del, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvCoxaagg_pal
List cvCoxaagg_pal(int dfmax, int ntie, int ntietr, arma::vec b, arma::vec w, arma::mat x, arma::mat xtr, arma::mat xva, arma::vec yva, bool tie, arma::uvec tie1, arma::uvec tie2, arma::uvec tie3, bool tietr, arma::uvec tie1tr, arma::uvec tie2tr, arma::uvec tie3tr, arma::vec del, arma::vec deltr, arma::vec delva, arma::mat l, arma::vec dl, arma::vec lam1, arma::vec lam2, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvCoxaagg_pal(SEXP dfmaxSEXP, SEXP ntieSEXP, SEXP ntietrSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP xtrSEXP, SEXP xvaSEXP, SEXP yvaSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP tietrSEXP, SEXP tie1trSEXP, SEXP tie2trSEXP, SEXP tie3trSEXP, SEXP delSEXP, SEXP deltrSEXP, SEXP delvaSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< int >::type ntietr(ntietrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< bool >::type tietr(tietrSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie1tr(tie1trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie2tr(tie2trSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type tie3tr(tie3trSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type deltr(deltrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delva(delvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvCoxaagg_pal(dfmax, ntie, ntietr, b, w, x, xtr, xva, yva, tie, tie1, tie2, tie3, tietr, tie1tr, tie2tr, tie3tr, del, deltr, delva, l, dl, lam1, lam2, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// findCox1se
List findCox1se(int n, int p, int ntie, arma::vec& b, arma::vec& w, arma::mat& x, bool tie, arma::uvec& tie1, arma::uvec& tie2, arma::uvec& tie3, arma::vec& del, arma::mat& l, arma::vec& dl, int maxiter, double cri, arma::mat& tune);
RcppExport SEXP _glmaag_findCox1se(SEXP nSEXP, SEXP pSEXP, SEXP ntieSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP tieSEXP, SEXP tie1SEXP, SEXP tie2SEXP, SEXP tie3SEXP, SEXP delSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP maxiterSEXP, SEXP criSEXP, SEXP tuneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type ntie(ntieSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type tie(tieSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie1(tie1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie2(tie2SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type tie3(tie3SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type del(delSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type tune(tuneSEXP);
    rcpp_result_gen = Rcpp::wrap(findCox1se(n, p, ntie, b, w, x, tie, tie1, tie2, tie3, del, l, dl, maxiter, cri, tune));
    return rcpp_result_gen;
END_RCPP
}
// loginet
arma::vec loginet(double b0, arma::vec b, arma::mat x, const arma::vec& y, arma::mat l, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_loginet(SEXP b0SEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(loginet(b0, b, x, y, l, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// logiaagg
arma::vec logiaagg(double b0, arma::vec b, double lam1, double lam2, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_logiaagg(SEXP b0SEXP, SEXP bSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(logiaagg(b0, b, lam1, lam2, w, x, y, l, dl, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvlogiaagg
List cvlogiaagg(int nf, int dfmax, arma::vec b, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, const arma::vec& w, arma::vec& lam1, arma::vec& lam2, const arma::uvec& cvwhich, bool intercept, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvlogiaagg(SEXP nfSEXP, SEXP dfmaxSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP cvwhichSEXP, SEXP interceptSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlogiaagg(nf, dfmax, b, x, y, l, dl, w, lam1, lam2, cvwhich, intercept, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// sslogiaagg
arma::cube sslogiaagg(arma::vec b, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, const arma::vec& w, arma::vec& lam1, arma::vec& lam2, const arma::umat& sswhich, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_sslogiaagg(SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP sswhichSEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type sswhich(sswhichSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(sslogiaagg(b, x, y, l, dl, w, lam1, lam2, sswhich, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// sslogiaagg_pal
arma::cube sslogiaagg_pal(arma::vec b, arma::mat xtr, arma::vec ytr, arma::mat l, arma::vec dl, arma::vec w, arma::vec lam1, arma::vec lam2, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_sslogiaagg_pal(SEXP bSEXP, SEXP xtrSEXP, SEXP ytrSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(sslogiaagg_pal(b, xtr, ytr, l, dl, w, lam1, lam2, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// logiaagg_search
List logiaagg_search(int dfmax, arma::vec b, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, const arma::vec& w, arma::vec& lam1, arma::vec& lam2, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_logiaagg_search(SEXP dfmaxSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(logiaagg_search(dfmax, b, x, y, l, dl, w, lam1, lam2, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// logiaagg_search_pal
List logiaagg_search_pal(int dfmax, arma::vec b, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, const arma::vec& w, arma::vec& lam1, double lam2, bool intercept, int maxiter, double cri);
RcppExport SEXP _glmaag_logiaagg_search_pal(SEXP dfmaxSEXP, SEXP bSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(logiaagg_search_pal(dfmax, b, x, y, l, dl, w, lam1, lam2, intercept, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvlogiaagg_pal
List cvlogiaagg_pal(int dfmax, arma::vec b, arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::mat l, arma::vec dl, arma::vec w, arma::vec lam1, arma::vec lam2, bool intercept, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvlogiaagg_pal(SEXP dfmaxSEXP, SEXP bSEXP, SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP wSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlogiaagg_pal(dfmax, b, xtr, xva, ytr, yva, l, dl, w, lam1, lam2, intercept, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvloginet1
arma::cube cvloginet1(int nf, const arma::mat& x, const arma::vec& y, const arma::vec& b, const arma::mat& l1, const arma::mat& l2, arma::vec& lam2, arma::vec& bets, bool intercept, const arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvloginet1(SEXP nfSEXP, SEXP xSEXP, SEXP ySEXP, SEXP bSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP interceptSEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvloginet1(nf, x, y, b, l1, l2, lam2, bets, intercept, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvloginet1_pal
arma::mat cvloginet1_pal(arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::vec b, arma::mat l1, arma::mat l2, arma::vec lam2, arma::vec bets, bool intercept, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvloginet1_pal(SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP bSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP interceptSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvloginet1_pal(xtr, xva, ytr, yva, b, l1, l2, lam2, bets, intercept, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvloginet2
arma::mat cvloginet2(int nf, const arma::mat& x, const arma::vec& y, const arma::vec& b, const arma::mat& l, arma::vec& lam2, bool intercept, const arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvloginet2(SEXP nfSEXP, SEXP xSEXP, SEXP ySEXP, SEXP bSEXP, SEXP lSEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvloginet2(nf, x, y, b, l, lam2, intercept, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvloginet2_pal
arma::vec cvloginet2_pal(arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::vec b, arma::mat l, arma::vec lam2, bool intercept, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvloginet2_pal(SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP bSEXP, SEXP lSEXP, SEXP lam2SEXP, SEXP interceptSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvloginet2_pal(xtr, xva, ytr, yva, b, l, lam2, intercept, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// findlogi1se
List findlogi1se(double b0, const arma::vec& b, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, bool intercept, int maxiter, double cri, const arma::mat& tune);
RcppExport SEXP _glmaag_findlogi1se(SEXP b0SEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP interceptSEXP, SEXP maxiterSEXP, SEXP criSEXP, SEXP tuneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tune(tuneSEXP);
    rcpp_result_gen = Rcpp::wrap(findlogi1se(b0, b, w, x, y, l, dl, intercept, maxiter, cri, tune));
    return rcpp_result_gen;
END_RCPP
}
// lrnet
arma::vec lrnet(const arma::mat& x, const arma::vec& y, const arma::mat& l);
RcppExport SEXP _glmaag_lrnet(SEXP xSEXP, SEXP ySEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(lrnet(x, y, l));
    return rcpp_result_gen;
END_RCPP
}
// lraagg
arma::vec lraagg(arma::vec b, double lam1, double lam2, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, int maxiter, double cri);
RcppExport SEXP _glmaag_lraagg(SEXP bSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(lraagg(b, lam1, lam2, w, x, y, l, dl, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvlrnet1
arma::cube cvlrnet1(int nf, const arma::mat& x, const arma::vec& y, const arma::mat& l1, const arma::mat& l2, arma::vec& lam2, arma::vec& bets, const arma::uvec& cvwhich, bool meas);
RcppExport SEXP _glmaag_cvlrnet1(SEXP nfSEXP, SEXP xSEXP, SEXP ySEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP cvwhichSEXP, SEXP measSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlrnet1(nf, x, y, l1, l2, lam2, bets, cvwhich, meas));
    return rcpp_result_gen;
END_RCPP
}
// cvlrnet1_pal
arma::mat cvlrnet1_pal(arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::mat l1, arma::mat l2, arma::vec lam2, arma::vec bets, bool meas);
RcppExport SEXP _glmaag_cvlrnet1_pal(SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP l1SEXP, SEXP l2SEXP, SEXP lam2SEXP, SEXP betsSEXP, SEXP measSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l1(l1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l2(l2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bets(betsSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlrnet1_pal(xtr, xva, ytr, yva, l1, l2, lam2, bets, meas));
    return rcpp_result_gen;
END_RCPP
}
// cvlrnet2
arma::mat cvlrnet2(int nf, const arma::mat& x, const arma::vec& y, const arma::mat& l, arma::vec& lam2, const arma::uvec& cvwhich, bool meas);
RcppExport SEXP _glmaag_cvlrnet2(SEXP nfSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP lam2SEXP, SEXP cvwhichSEXP, SEXP measSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlrnet2(nf, x, y, l, lam2, cvwhich, meas));
    return rcpp_result_gen;
END_RCPP
}
// cvlrnet2_pal
arma::vec cvlrnet2_pal(arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::mat l, arma::vec lam2, bool meas);
RcppExport SEXP _glmaag_cvlrnet2_pal(SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP lSEXP, SEXP lam2SEXP, SEXP measSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlrnet2_pal(xtr, xva, ytr, yva, l, lam2, meas));
    return rcpp_result_gen;
END_RCPP
}
// cvlraagg
List cvlraagg(int nf, int dfmax, const arma::vec& b, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, arma::vec& lam1, arma::vec& lam2, const arma::uvec& cvwhich, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvlraagg(SEXP nfSEXP, SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP cvwhichSEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nf(nfSEXP);
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type cvwhich(cvwhichSEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlraagg(nf, dfmax, b, w, x, y, l, dl, lam1, lam2, cvwhich, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// cvlraagg_pal
List cvlraagg_pal(int dfmax, arma::vec b, arma::vec w, arma::mat xtr, arma::mat xva, arma::vec ytr, arma::vec yva, arma::mat l, arma::vec dl, arma::vec lam1, arma::vec lam2, bool meas, int maxiter, double cri);
RcppExport SEXP _glmaag_cvlraagg_pal(SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xtrSEXP, SEXP xvaSEXP, SEXP ytrSEXP, SEXP yvaSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP measSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xva(xvaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yva(yvaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< bool >::type meas(measSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(cvlraagg_pal(dfmax, b, w, xtr, xva, ytr, yva, l, dl, lam1, lam2, meas, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// sslraagg
arma::cube sslraagg(const arma::vec& b, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, arma::vec& lam1, arma::vec& lam2, const arma::umat& sswhich, int maxiter, double cri);
RcppExport SEXP _glmaag_sslraagg(SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP sswhichSEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type sswhich(sswhichSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(sslraagg(b, w, x, y, l, dl, lam1, lam2, sswhich, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// sslraagg_pal
arma::cube sslraagg_pal(arma::vec b, arma::vec w, arma::mat xtr, arma::vec ytr, arma::mat l, arma::vec dl, arma::vec lam1, arma::vec lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_sslraagg_pal(SEXP bSEXP, SEXP wSEXP, SEXP xtrSEXP, SEXP ytrSEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xtr(xtrSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ytr(ytrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(sslraagg_pal(b, w, xtr, ytr, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// lraagg_search
List lraagg_search(int dfmax, arma::vec b, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, arma::vec& lam1, arma::vec& lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_lraagg_search(SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(lraagg_search(dfmax, b, w, x, y, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// lraagg_search_pal
List lraagg_search_pal(int dfmax, arma::vec b, arma::vec w, arma::mat x, arma::vec y, arma::mat l, arma::vec dl, arma::vec lam1, double lam2, int maxiter, double cri);
RcppExport SEXP _glmaag_lraagg_search_pal(SEXP dfmaxSEXP, SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP maxiterSEXP, SEXP criSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dfmax(dfmaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type l(lSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    rcpp_result_gen = Rcpp::wrap(lraagg_search_pal(dfmax, b, w, x, y, l, dl, lam1, lam2, maxiter, cri));
    return rcpp_result_gen;
END_RCPP
}
// findlr1se
List findlr1se(const arma::vec& b, const arma::vec& w, const arma::mat& x, const arma::vec& y, const arma::mat& l, const arma::vec& dl, int maxiter, double cri, const arma::mat& tune);
RcppExport SEXP _glmaag_findlr1se(SEXP bSEXP, SEXP wSEXP, SEXP xSEXP, SEXP ySEXP, SEXP lSEXP, SEXP dlSEXP, SEXP maxiterSEXP, SEXP criSEXP, SEXP tuneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type l(lSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type dl(dlSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type cri(criSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tune(tuneSEXP);
    rcpp_result_gen = Rcpp::wrap(findlr1se(b, w, x, y, l, dl, maxiter, cri, tune));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_glmaag_Coxnet", (DL_FUNC) &_glmaag_Coxnet, 10},
    {"_glmaag_Coxaagg", (DL_FUNC) &_glmaag_Coxaagg, 15},
    {"_glmaag_cvCoxnet1", (DL_FUNC) &_glmaag_cvCoxnet1, 17},
    {"_glmaag_cvCoxnet1_pal", (DL_FUNC) &_glmaag_cvCoxnet1_pal, 23},
    {"_glmaag_cvCoxnet2", (DL_FUNC) &_glmaag_cvCoxnet2, 16},
    {"_glmaag_cvCoxnet2_pal", (DL_FUNC) &_glmaag_cvCoxnet2_pal, 23},
    {"_glmaag_cvCoxaagg", (DL_FUNC) &_glmaag_cvCoxaagg, 20},
    {"_glmaag_ssCoxaagg", (DL_FUNC) &_glmaag_ssCoxaagg, 17},
    {"_glmaag_ssCoxaagg_pal", (DL_FUNC) &_glmaag_ssCoxaagg_pal, 15},
    {"_glmaag_Coxaagg_search", (DL_FUNC) &_glmaag_Coxaagg_search, 16},
    {"_glmaag_Coxaagg_search_pal", (DL_FUNC) &_glmaag_Coxaagg_search_pal, 16},
    {"_glmaag_cvCoxaagg_pal", (DL_FUNC) &_glmaag_cvCoxaagg_pal, 27},
    {"_glmaag_findCox1se", (DL_FUNC) &_glmaag_findCox1se, 16},
    {"_glmaag_loginet", (DL_FUNC) &_glmaag_loginet, 8},
    {"_glmaag_logiaagg", (DL_FUNC) &_glmaag_logiaagg, 12},
    {"_glmaag_cvlogiaagg", (DL_FUNC) &_glmaag_cvlogiaagg, 15},
    {"_glmaag_sslogiaagg", (DL_FUNC) &_glmaag_sslogiaagg, 12},
    {"_glmaag_sslogiaagg_pal", (DL_FUNC) &_glmaag_sslogiaagg_pal, 11},
    {"_glmaag_logiaagg_search", (DL_FUNC) &_glmaag_logiaagg_search, 12},
    {"_glmaag_logiaagg_search_pal", (DL_FUNC) &_glmaag_logiaagg_search_pal, 12},
    {"_glmaag_cvlogiaagg_pal", (DL_FUNC) &_glmaag_cvlogiaagg_pal, 15},
    {"_glmaag_cvloginet1", (DL_FUNC) &_glmaag_cvloginet1, 13},
    {"_glmaag_cvloginet1_pal", (DL_FUNC) &_glmaag_cvloginet1_pal, 13},
    {"_glmaag_cvloginet2", (DL_FUNC) &_glmaag_cvloginet2, 11},
    {"_glmaag_cvloginet2_pal", (DL_FUNC) &_glmaag_cvloginet2_pal, 11},
    {"_glmaag_findlogi1se", (DL_FUNC) &_glmaag_findlogi1se, 11},
    {"_glmaag_lrnet", (DL_FUNC) &_glmaag_lrnet, 3},
    {"_glmaag_lraagg", (DL_FUNC) &_glmaag_lraagg, 10},
    {"_glmaag_cvlrnet1", (DL_FUNC) &_glmaag_cvlrnet1, 9},
    {"_glmaag_cvlrnet1_pal", (DL_FUNC) &_glmaag_cvlrnet1_pal, 9},
    {"_glmaag_cvlrnet2", (DL_FUNC) &_glmaag_cvlrnet2, 7},
    {"_glmaag_cvlrnet2_pal", (DL_FUNC) &_glmaag_cvlrnet2_pal, 7},
    {"_glmaag_cvlraagg", (DL_FUNC) &_glmaag_cvlraagg, 14},
    {"_glmaag_cvlraagg_pal", (DL_FUNC) &_glmaag_cvlraagg_pal, 14},
    {"_glmaag_sslraagg", (DL_FUNC) &_glmaag_sslraagg, 11},
    {"_glmaag_sslraagg_pal", (DL_FUNC) &_glmaag_sslraagg_pal, 10},
    {"_glmaag_lraagg_search", (DL_FUNC) &_glmaag_lraagg_search, 11},
    {"_glmaag_lraagg_search_pal", (DL_FUNC) &_glmaag_lraagg_search_pal, 11},
    {"_glmaag_findlr1se", (DL_FUNC) &_glmaag_findlr1se, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_glmaag(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
