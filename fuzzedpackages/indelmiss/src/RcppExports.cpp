// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// loopC
NumericVector loopC(NumericVector nodelist, int al, IntegerVector x, IntegerVector x2, List pm, NumericMatrix Lix, int finind);
RcppExport SEXP _indelmiss_loopC(SEXP nodelistSEXP, SEXP alSEXP, SEXP xSEXP, SEXP x2SEXP, SEXP pmSEXP, SEXP LixSEXP, SEXP finindSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nodelist(nodelistSEXP);
    Rcpp::traits::input_parameter< int >::type al(alSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type pm(pmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lix(LixSEXP);
    Rcpp::traits::input_parameter< int >::type finind(finindSEXP);
    rcpp_result_gen = Rcpp::wrap(loopC(nodelist, al, x, x2, pm, Lix, finind));
    return rcpp_result_gen;
END_RCPP
}
// allpatt_loopC
NumericMatrix allpatt_loopC(NumericVector nodelist, int al, IntegerVector x, IntegerVector x2, List pm_plc, List Lix, int finind);
RcppExport SEXP _indelmiss_allpatt_loopC(SEXP nodelistSEXP, SEXP alSEXP, SEXP xSEXP, SEXP x2SEXP, SEXP pm_plcSEXP, SEXP LixSEXP, SEXP finindSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nodelist(nodelistSEXP);
    Rcpp::traits::input_parameter< int >::type al(alSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type pm_plc(pm_plcSEXP);
    Rcpp::traits::input_parameter< List >::type Lix(LixSEXP);
    Rcpp::traits::input_parameter< int >::type finind(finindSEXP);
    rcpp_result_gen = Rcpp::wrap(allpatt_loopC(nodelist, al, x, x2, pm_plc, Lix, finind));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_indelmiss_loopC", (DL_FUNC) &_indelmiss_loopC, 7},
    {"_indelmiss_allpatt_loopC", (DL_FUNC) &_indelmiss_allpatt_loopC, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_indelmiss(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
