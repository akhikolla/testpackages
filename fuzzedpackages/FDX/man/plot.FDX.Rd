% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_funs.R
\name{plot.FDX}
\alias{plot.FDX}
\title{Plot Method for \code{FDX} objects}
\usage{
\method{plot}{FDX}(
  x,
  col = c(2, 4, 1),
  pch = c(1, 1, 1),
  lwd = c(1, 1, 1),
  type.crit = "b",
  legend = NULL,
  ...
)
}
\arguments{
\item{x}{an object of class "\code{FDX}".}

\item{col}{a numeric or character vector of length 3 indicating the
colors of the \enumerate{
  \item rejected p-values
  \item accepted p-values
  \item critical values (if present).
}}

\item{pch}{a numeric or character vector of length 3 indicating the
point characters of the \enumerate{
  \item rejected p-values
  \item accepted p-values
  \item critical values (if present and \code{type.crit}
        is a plot type like \code{'p'}, \code{'b'} etc.).
}}

\item{lwd}{a numeric vector of length 3 indicating the thickness of
the points and lines.}

\item{type.crit}{1-character string giving the type of plot desired for the
critical values (e.g.: \code{'p'}, \code{'l'} etc; see
\code{\link{plot}}).}

\item{legend}{if NULL, no legend is plotted; otherwise expecting a
character string like "topleft" etc. or a numeric vector
of two elements indicating (x, y) coordinates.}

\item{...}{further arguments to \code{\link{plot.default}}.}
}
\description{
Plots raw p-values of a \code{FDX} object and highlights rejected and
accepted p-values. If present, the critical values are plotted, too.
}
\details{
If \code{x} contains results of a weighted approach, the Y-axis of the plot
is derived from the weighted p-values. Otherwise, it is constituted by the
raw ones.
}
\examples{
X1 <- c(4, 2, 2, 14, 6, 9, 4, 0, 1)
X2 <- c(0, 0, 1, 3, 2, 1, 2, 2, 2)
N1 <- rep(148, 9)
N2 <- rep(132, 9)
Y1 <- N1 - X1
Y2 <- N2 - X2
df <- data.frame(X1, Y1, X2, Y2)
df

# Construction of the p-values and their supports (fisher.pvalues.support
# is from 'DiscreteFDR' package!)
df.formatted <- fisher.pvalues.support(counts = df, input = "noassoc")
raw.pvalues <- df.formatted$raw
pCDFlist <- df.formatted$support

DLR.sd.fast <- DLR(raw.pvalues, pCDFlist)
DLR.sd.crit <- DLR(raw.pvalues, pCDFlist, critical.values = TRUE)
DLR.su.fast <- DLR(raw.pvalues, pCDFlist, direction = "su")
DLR.su.crit <- DLR(raw.pvalues, pCDFlist, direction = "su", critical.values = TRUE)

plot(DLR.su.fast)
plot(DLR.su.crit, xlim = c(1, 5), ylim = c(0, 0.4))
plot(DLR.sd.fast, col = c(2, 4), pch = c(2, 3), lwd = c(2, 2), 
    legend = "topleft", xlim = c(1, 5), ylim = c(0, 0.4))
plot(DLR.sd.crit, col = c(2, 4, 1), pch = c(1, 1, 4), lwd = c(1, 1, 2), 
    type.crit = 'o', legend = c(1, 0.4), lty = 1, xlim = c(1, 5), 
    ylim = c(0, 0.4))

}
