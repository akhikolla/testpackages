// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calculate_dissimilarity_cpp
double calculate_dissimilarity_cpp(StringVector seq1, StringVector seq2);
RcppExport SEXP _ProcData_calculate_dissimilarity_cpp(SEXP seq1SEXP, SEXP seq2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_dissimilarity_cpp(seq1, seq2));
    return rcpp_result_gen;
END_RCPP
}
// calculate_tdissimilarity_cpp
double calculate_tdissimilarity_cpp(StringVector seq1, StringVector seq2, NumericVector ts1, NumericVector ts2);
RcppExport SEXP _ProcData_calculate_tdissimilarity_cpp(SEXP seq1SEXP, SEXP seq2SEXP, SEXP ts1SEXP, SEXP ts2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ts1(ts1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ts2(ts2SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_tdissimilarity_cpp(seq1, seq2, ts1, ts2));
    return rcpp_result_gen;
END_RCPP
}
// group_score_cpp
double group_score_cpp(List list1, List list2);
RcppExport SEXP _ProcData_group_score_cpp(SEXP list1SEXP, SEXP list2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type list1(list1SEXP);
    Rcpp::traits::input_parameter< List >::type list2(list2SEXP);
    rcpp_result_gen = Rcpp::wrap(group_score_cpp(list1, list2));
    return rcpp_result_gen;
END_RCPP
}
// calculate_dist_cpp
NumericMatrix calculate_dist_cpp(List seqs);
RcppExport SEXP _ProcData_calculate_dist_cpp(SEXP seqsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_dist_cpp(seqs));
    return rcpp_result_gen;
END_RCPP
}
// calculate_tdist_cpp
NumericMatrix calculate_tdist_cpp(List action_seqs, List time_seqs);
RcppExport SEXP _ProcData_calculate_tdist_cpp(SEXP action_seqsSEXP, SEXP time_seqsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type action_seqs(action_seqsSEXP);
    Rcpp::traits::input_parameter< List >::type time_seqs(time_seqsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_tdist_cpp(action_seqs, time_seqs));
    return rcpp_result_gen;
END_RCPP
}
// calculate_group_dist_cpp
NumericMatrix calculate_group_dist_cpp(List seqs);
RcppExport SEXP _ProcData_calculate_group_dist_cpp(SEXP seqsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_group_dist_cpp(seqs));
    return rcpp_result_gen;
END_RCPP
}
// calculate_common_event_proportion
double calculate_common_event_proportion(StringVector seq1, StringVector seq2);
RcppExport SEXP _ProcData_calculate_common_event_proportion(SEXP seq1SEXP, SEXP seq2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_common_event_proportion(seq1, seq2));
    return rcpp_result_gen;
END_RCPP
}
// paste_seq
StringVector paste_seq(StringVector seq, int k);
RcppExport SEXP _ProcData_paste_seq(SEXP seqSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(paste_seq(seq, k));
    return rcpp_result_gen;
END_RCPP
}
// calculate_common_ngram_proportion
double calculate_common_ngram_proportion(StringVector seq1, StringVector seq2, int k);
RcppExport SEXP _ProcData_calculate_common_ngram_proportion(SEXP seq1SEXP, SEXP seq2SEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_common_ngram_proportion(seq1, seq2, k));
    return rcpp_result_gen;
END_RCPP
}
// calculate_ngram_dissimilarity
double calculate_ngram_dissimilarity(StringVector seq1, StringVector seq2, IntegerVector L_set);
RcppExport SEXP _ProcData_calculate_ngram_dissimilarity(SEXP seq1SEXP, SEXP seq2SEXP, SEXP L_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector >::type seq1(seq1SEXP);
    Rcpp::traits::input_parameter< StringVector >::type seq2(seq2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type L_set(L_setSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_ngram_dissimilarity(seq1, seq2, L_set));
    return rcpp_result_gen;
END_RCPP
}
// calculate_ngram_dist_cpp
NumericMatrix calculate_ngram_dist_cpp(List seqs, IntegerVector L_set);
RcppExport SEXP _ProcData_calculate_ngram_dist_cpp(SEXP seqsSEXP, SEXP L_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type L_set(L_setSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_ngram_dist_cpp(seqs, L_set));
    return rcpp_result_gen;
END_RCPP
}
// MDS
List MDS(NumericMatrix D, NumericMatrix Theta, int n_epoch, double step_size, double tot, unsigned int seed);
RcppExport SEXP _ProcData_MDS(SEXP DSEXP, SEXP ThetaSEXP, SEXP n_epochSEXP, SEXP step_sizeSEXP, SEXP totSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_epoch(n_epochSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tot(totSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(MDS(D, Theta, n_epoch, step_size, tot, seed));
    return rcpp_result_gen;
END_RCPP
}
// MDS_subset
List MDS_subset(NumericMatrix D, NumericMatrix Theta, int n_epoch, double step_size, double tot, IntegerMatrix train_set, IntegerMatrix valid_set);
RcppExport SEXP _ProcData_MDS_subset(SEXP DSEXP, SEXP ThetaSEXP, SEXP n_epochSEXP, SEXP step_sizeSEXP, SEXP totSEXP, SEXP train_setSEXP, SEXP valid_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< int >::type n_epoch(n_epochSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tot(totSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type train_set(train_setSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type valid_set(valid_setSEXP);
    rcpp_result_gen = Rcpp::wrap(MDS_subset(D, Theta, n_epoch, step_size, tot, train_set, valid_set));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ProcData_calculate_dissimilarity_cpp", (DL_FUNC) &_ProcData_calculate_dissimilarity_cpp, 2},
    {"_ProcData_calculate_tdissimilarity_cpp", (DL_FUNC) &_ProcData_calculate_tdissimilarity_cpp, 4},
    {"_ProcData_group_score_cpp", (DL_FUNC) &_ProcData_group_score_cpp, 2},
    {"_ProcData_calculate_dist_cpp", (DL_FUNC) &_ProcData_calculate_dist_cpp, 1},
    {"_ProcData_calculate_tdist_cpp", (DL_FUNC) &_ProcData_calculate_tdist_cpp, 2},
    {"_ProcData_calculate_group_dist_cpp", (DL_FUNC) &_ProcData_calculate_group_dist_cpp, 1},
    {"_ProcData_calculate_common_event_proportion", (DL_FUNC) &_ProcData_calculate_common_event_proportion, 2},
    {"_ProcData_paste_seq", (DL_FUNC) &_ProcData_paste_seq, 2},
    {"_ProcData_calculate_common_ngram_proportion", (DL_FUNC) &_ProcData_calculate_common_ngram_proportion, 3},
    {"_ProcData_calculate_ngram_dissimilarity", (DL_FUNC) &_ProcData_calculate_ngram_dissimilarity, 3},
    {"_ProcData_calculate_ngram_dist_cpp", (DL_FUNC) &_ProcData_calculate_ngram_dist_cpp, 2},
    {"_ProcData_MDS", (DL_FUNC) &_ProcData_MDS, 6},
    {"_ProcData_MDS_subset", (DL_FUNC) &_ProcData_MDS_subset, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_ProcData(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
