// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rcpp_D_4cell
Rcpp::List Rcpp_D_4cell(const arma::mat& Xmat, const arma::mat& Q_res, const arma::mat& q_res);
RcppExport SEXP _WRI_Rcpp_D_4cell(SEXP XmatSEXP, SEXP Q_resSEXP, SEXP q_resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Q_res(Q_resSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type q_res(q_resSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_D_4cell(Xmat, Q_res, q_res));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_D_cell
arma::field<arma::mat> Rcpp_D_cell(const arma::mat& Xmat, const arma::mat& Q_res);
RcppExport SEXP _WRI_Rcpp_D_cell(SEXP XmatSEXP, SEXP Q_resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xmat(XmatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Q_res(Q_resSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_D_cell(Xmat, Q_res));
    return rcpp_result_gen;
END_RCPP
}
// kernel_partialF
arma::mat kernel_partialF(const arma::mat& Xc, const arma::mat& Q_res, const arma::mat& left_mat, int r);
RcppExport SEXP _WRI_kernel_partialF(SEXP XcSEXP, SEXP Q_resSEXP, SEXP left_matSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xc(XcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Q_res(Q_resSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type left_mat(left_matSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(kernel_partialF(Xc, Q_res, left_mat, r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WRI_Rcpp_D_4cell", (DL_FUNC) &_WRI_Rcpp_D_4cell, 3},
    {"_WRI_Rcpp_D_cell", (DL_FUNC) &_WRI_Rcpp_D_cell, 2},
    {"_WRI_kernel_partialF", (DL_FUNC) &_WRI_kernel_partialF, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_WRI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
