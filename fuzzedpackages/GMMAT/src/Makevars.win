CXX_STD=CXX11

PKG_CXXFLAGS=-DARMA_64BIT_WORD

SOURCES= zstd-1.4.5/lib/common/debug.c \
	 zstd-1.4.5/lib/common/entropy_common.c \
	 zstd-1.4.5/lib/common/error_private.c \
	 zstd-1.4.5/lib/common/fse_decompress.c \
	 zstd-1.4.5/lib/common/pool.c \
	 zstd-1.4.5/lib/common/threading.c \
	 zstd-1.4.5/lib/common/xxhash.c \
         zstd-1.4.5/lib/common/zstd_common.c \
         zstd-1.4.5/lib/decompress/huf_decompress.c \
         zstd-1.4.5/lib/decompress/zstd_ddict.c \
         zstd-1.4.5/lib/decompress/zstd_decompress.c \
         zstd-1.4.5/lib/decompress/zstd_decompress_block.c \
	 libdeflate-1.6/lib/adler32.c \
	 libdeflate-1.6/lib/crc32.c \
	 libdeflate-1.6/lib/deflate_compress.c \
	 libdeflate-1.6/lib/deflate_decompress.c \
	 libdeflate-1.6/lib/gzip_compress.c \
	 libdeflate-1.6/lib/gzip_decompress.c \
	 libdeflate-1.6/lib/utils.c \
	 libdeflate-1.6/lib/zlib_compress.c \
	 libdeflate-1.6/lib/zlib_decompress.c \
	 libdeflate-1.6/lib/arm/cpu_features.c \
	 libdeflate-1.6/lib/x86/cpu_features.c

OBJECTS= fitglmm.o \
	 registerDynamicSymbol.o \
	 zstd-1.4.5/lib/common/debug.o \
	 zstd-1.4.5/lib/common/entropy_common.o \
	 zstd-1.4.5/lib/common/error_private.o \
	 zstd-1.4.5/lib/common/fse_decompress.o \
	 zstd-1.4.5/lib/common/pool.o \
	 zstd-1.4.5/lib/common/threading.o \
	 zstd-1.4.5/lib/common/xxhash.o \
         zstd-1.4.5/lib/common/zstd_common.o \
         zstd-1.4.5/lib/decompress/huf_decompress.o \
         zstd-1.4.5/lib/decompress/zstd_ddict.o \
         zstd-1.4.5/lib/decompress/zstd_decompress.o \
         zstd-1.4.5/lib/decompress/zstd_decompress_block.o \
	 libdeflate-1.6/lib/adler32.o \
	 libdeflate-1.6/lib/crc32.o \
	 libdeflate-1.6/lib/deflate_compress.o \
	 libdeflate-1.6/lib/deflate_decompress.o \
	 libdeflate-1.6/lib/gzip_compress.o \
	 libdeflate-1.6/lib/gzip_decompress.o \
	 libdeflate-1.6/lib/utils.o \
	 libdeflate-1.6/lib/zlib_compress.o \
	 libdeflate-1.6/lib/zlib_decompress.o \
	 libdeflate-1.6/lib/arm/cpu_features.o \
	 libdeflate-1.6/lib/x86/cpu_features.o

PKG_LIBS=$(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) -lz -lbz2


all: $(SHLIB)


.PHONY: shlib-clean clean

shlib-clean: clean

clean:
	rm -rf $(OBJECTS) *.so


