// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// clusterl0
List clusterl0(vector<mat> data, uvec svs, int sz, int seed, int maxIter, double thres, int debug);
RcppExport SEXP _mvcluster_clusterl0(SEXP dataSEXP, SEXP svsSEXP, SEXP szSEXP, SEXP seedSEXP, SEXP maxIterSEXP, SEXP thresSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vector<mat> >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uvec >::type svs(svsSEXP);
    Rcpp::traits::input_parameter< int >::type sz(szSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type thres(thresSEXP);
    Rcpp::traits::input_parameter< int >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(clusterl0(data, svs, sz, seed, maxIter, thres, debug));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mvcluster_clusterl0", (DL_FUNC) &_mvcluster_clusterl0, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_mvcluster(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
