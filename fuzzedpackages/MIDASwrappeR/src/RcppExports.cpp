// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getMIDASScore
NumericVector getMIDASScore(List input, int rows, int buckets, double alpha, bool norelations, bool undirected);
RcppExport SEXP _MIDASwrappeR_getMIDASScore(SEXP inputSEXP, SEXP rowsSEXP, SEXP bucketsSEXP, SEXP alphaSEXP, SEXP norelationsSEXP, SEXP undirectedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type input(inputSEXP);
    Rcpp::traits::input_parameter< int >::type rows(rowsSEXP);
    Rcpp::traits::input_parameter< int >::type buckets(bucketsSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type norelations(norelationsSEXP);
    Rcpp::traits::input_parameter< bool >::type undirected(undirectedSEXP);
    rcpp_result_gen = Rcpp::wrap(getMIDASScore(input, rows, buckets, alpha, norelations, undirected));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MIDASwrappeR_getMIDASScore", (DL_FUNC) &_MIDASwrappeR_getMIDASScore, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_MIDASwrappeR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
