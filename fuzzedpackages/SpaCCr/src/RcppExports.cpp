// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SpaCC
arma::field<arma::mat> SpaCC(arma::mat X, const arma::vec& w, const double& gamma, const double& nu, const bool& verbose, const double& tol, const int& maxiter, const arma::mat& Uinit, const arma::mat& Vinit, const arma::mat& Laminit);
RcppExport SEXP _SpaCCr_SpaCC(SEXP XSEXP, SEXP wSEXP, SEXP gammaSEXP, SEXP nuSEXP, SEXP verboseSEXP, SEXP tolSEXP, SEXP maxiterSEXP, SEXP UinitSEXP, SEXP VinitSEXP, SEXP LaminitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const double& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const double& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Uinit(UinitSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Vinit(VinitSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Laminit(LaminitSEXP);
    rcpp_result_gen = Rcpp::wrap(SpaCC(X, w, gamma, nu, verbose, tol, maxiter, Uinit, Vinit, Laminit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpaCCr_SpaCC", (DL_FUNC) &_SpaCCr_SpaCC, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpaCCr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
