// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_out
List calc_out(std::vector<double> y, int m, std::vector<double> initstate, int errortype, int trendtype, int seasontype, bool damped, double alpha, double beta, double gamma, double phi, int nmse, double k);
RcppExport SEXP _robets_calc_out(SEXP ySEXP, SEXP mSEXP, SEXP initstateSEXP, SEXP errortypeSEXP, SEXP trendtypeSEXP, SEXP seasontypeSEXP, SEXP dampedSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP phiSEXP, SEXP nmseSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type initstate(initstateSEXP);
    Rcpp::traits::input_parameter< int >::type errortype(errortypeSEXP);
    Rcpp::traits::input_parameter< int >::type trendtype(trendtypeSEXP);
    Rcpp::traits::input_parameter< int >::type seasontype(seasontypeSEXP);
    Rcpp::traits::input_parameter< bool >::type damped(dampedSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type nmse(nmseSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_out(y, m, initstate, errortype, trendtype, seasontype, damped, alpha, beta, gamma, phi, nmse, k));
    return rcpp_result_gen;
END_RCPP
}
// tau2
double tau2(std::vector<double> x);
RcppExport SEXP _robets_tau2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(tau2(x));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP robets_calc_out(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robets_tau2(SEXP);
RcppExport SEXP robetsNelderMead(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP robetsTargetFunctionInit(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_robets_calc_out", (DL_FUNC) &_robets_calc_out, 13},
    {"_robets_tau2", (DL_FUNC) &_robets_tau2, 1},
    {"robets_calc_out",          (DL_FUNC) &robets_calc_out,          13},
    {"robets_tau2",              (DL_FUNC) &robets_tau2,               1},
    {"robetsNelderMead",         (DL_FUNC) &robetsNelderMead,          9},
    {"robetsTargetFunctionInit", (DL_FUNC) &robetsTargetFunctionInit, 33},
    {NULL, NULL, 0}
};

RcppExport void R_init_robets(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
