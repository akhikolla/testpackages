# Generated by roxygen2: do not edit by hand

S3method(DynComm,addRemoveEdges)
S3method(DynComm,communities)
S3method(DynComm,communitiesEdgeCount)
S3method(DynComm,community)
S3method(DynComm,communityCount)
S3method(DynComm,communityEdgeWeight)
S3method(DynComm,communityInnerEdgesWeight)
S3method(DynComm,communityMapping)
S3method(DynComm,communityNeighbours)
S3method(DynComm,communityTotalWeight)
S3method(DynComm,communityVertexCount)
S3method(DynComm,edgeCount)
S3method(DynComm,edgeWeight)
S3method(DynComm,neighbours)
S3method(DynComm,postProcess)
S3method(DynComm,quality)
S3method(DynComm,results)
S3method(DynComm,select)
S3method(DynComm,time)
S3method(DynComm,vertexCount)
S3method(DynComm,vertices)
S3method(DynComm,verticesAll)
export(ALGORITHM)
export(CRITERION)
export(DynComm)
export(DynComm.add)
export(DynComm.addRemove)
export(DynComm.addRemoveEdges)
export(DynComm.communities)
export(DynComm.communitiesEdgeCount)
export(DynComm.community)
export(DynComm.communityCount)
export(DynComm.communityEdgeWeight)
export(DynComm.communityInnerEdgesWeight)
export(DynComm.communityMapping)
export(DynComm.communityNeighbours)
export(DynComm.communityNodeCount)
export(DynComm.communityTotalWeight)
export(DynComm.communityVertexCount)
export(DynComm.edgeCount)
export(DynComm.edgeWeight)
export(DynComm.neighbours)
export(DynComm.nodes)
export(DynComm.nodesAll)
export(DynComm.postProcess)
export(DynComm.quality)
export(DynComm.results)
export(DynComm.select)
export(DynComm.time)
export(DynComm.vertexCount)
export(DynComm.vertices)
export(DynComm.verticesAll)
export(POSTPROCESSING)
import(Rcpp)
import(igraph)
import(methods)
importFrom(Rdpack,reprompt)
importFrom(utils,write.table)
useDynLib(DynComm)
