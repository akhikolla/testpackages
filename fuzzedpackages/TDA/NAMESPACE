importFrom(Rcpp, evalCpp)

export(
  alphaComplexDiag,
  alphaComplexFiltration,
  alphaShapeDiag,
  alphaShapeFiltration,
  bootstrapBand,
  bootstrapDiagram,
  bottleneck,
  circleUnif,
  clusterTree,
  distFct,
  dtm,
  filtrationDiag,
  funFiltration,
  gridDiag,
  gridFiltration,
  hausdInterval,
  kde,
  kernelDist,
  knnDE,
  landscape,
  maxPersistence,
  multipBootstrap,
  plot.diagram,
  plot.maxPersistence,
  plot.clusterTree,
  print.diagram,
  print.maxPersistence,
  print.clusterTree,
  summary.diagram,
  summary.maxPersistence,
  print.summary.diagram,
  print.summary.maxPersistence,
  ripsDiag,
  ripsFiltration,
  silhouette,
  sphereUnif,
  torusUnif,
  wasserstein)

S3method(plot, diagram)
S3method(plot, maxPersistence)
S3method(plot, clusterTree)
S3method(print, diagram)
S3method(print, maxPersistence)
S3method(print, clusterTree)
S3method(summary, diagram)
S3method(summary, maxPersistence)
S3method(print, summary.diagram)
S3method(print, summary.maxPersistence)

useDynLib(TDA, .registration = TRUE)