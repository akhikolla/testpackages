// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// commuter_cpp
DataFrame commuter_cpp(DataFrame seiiar_home, DataFrame seiiar_commuters, float beta, float a, float gamma, float asymptomaticProb, float asymptomaticRelativeInfectiousness, int N, int M);
RcppExport SEXP _spread_commuter_cpp(SEXP seiiar_homeSEXP, SEXP seiiar_commutersSEXP, SEXP betaSEXP, SEXP aSEXP, SEXP gammaSEXP, SEXP asymptomaticProbSEXP, SEXP asymptomaticRelativeInfectiousnessSEXP, SEXP NSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type seiiar_home(seiiar_homeSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type seiiar_commuters(seiiar_commutersSEXP);
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< float >::type a(aSEXP);
    Rcpp::traits::input_parameter< float >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< float >::type asymptomaticProb(asymptomaticProbSEXP);
    Rcpp::traits::input_parameter< float >::type asymptomaticRelativeInfectiousness(asymptomaticRelativeInfectiousnessSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(commuter_cpp(seiiar_home, seiiar_commuters, beta, a, gamma, asymptomaticProb, asymptomaticRelativeInfectiousness, N, M));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spread_commuter_cpp", (DL_FUNC) &_spread_commuter_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_spread(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
