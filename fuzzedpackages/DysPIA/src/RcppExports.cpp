// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calcDyspiaStatCumulativeBatch
List calcDyspiaStatCumulativeBatch(NumericVector const& stats, double DyspiaParam, NumericVector const& pathwayScores, IntegerVector const& pathwaysSizes, int iterations, int seed);
RcppExport SEXP _DysPIA_calcDyspiaStatCumulativeBatch(SEXP statsSEXP, SEXP DyspiaParamSEXP, SEXP pathwayScoresSEXP, SEXP pathwaysSizesSEXP, SEXP iterationsSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector const& >::type stats(statsSEXP);
    Rcpp::traits::input_parameter< double >::type DyspiaParam(DyspiaParamSEXP);
    Rcpp::traits::input_parameter< NumericVector const& >::type pathwayScores(pathwayScoresSEXP);
    Rcpp::traits::input_parameter< IntegerVector const& >::type pathwaysSizes(pathwaysSizesSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(calcDyspiaStatCumulativeBatch(stats, DyspiaParam, pathwayScores, pathwaysSizes, iterations, seed));
    return rcpp_result_gen;
END_RCPP
}
// calcDyspiaStatCumulative
NumericVector calcDyspiaStatCumulative(NumericVector const& stats, IntegerVector const& selectedStats, double DyspiaParam);
RcppExport SEXP _DysPIA_calcDyspiaStatCumulative(SEXP statsSEXP, SEXP selectedStatsSEXP, SEXP DyspiaParamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector const& >::type stats(statsSEXP);
    Rcpp::traits::input_parameter< IntegerVector const& >::type selectedStats(selectedStatsSEXP);
    Rcpp::traits::input_parameter< double >::type DyspiaParam(DyspiaParamSEXP);
    rcpp_result_gen = Rcpp::wrap(calcDyspiaStatCumulative(stats, selectedStats, DyspiaParam));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DysPIA_calcDyspiaStatCumulativeBatch", (DL_FUNC) &_DysPIA_calcDyspiaStatCumulativeBatch, 6},
    {"_DysPIA_calcDyspiaStatCumulative", (DL_FUNC) &_DysPIA_calcDyspiaStatCumulative, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_DysPIA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
