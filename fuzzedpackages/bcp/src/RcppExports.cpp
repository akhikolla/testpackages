// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_bcpR
SEXP rcpp_bcpR(SEXP py, SEXP px, SEXP pgrpinds, SEXP pid, SEXP pmcmcreturn, SEXP pburnin, SEXP pmcmc, SEXP pa, SEXP pw, SEXP pba, SEXP pnreg);
RcppExport SEXP _bcp_rcpp_bcpR(SEXP pySEXP, SEXP pxSEXP, SEXP pgrpindsSEXP, SEXP pidSEXP, SEXP pmcmcreturnSEXP, SEXP pburninSEXP, SEXP pmcmcSEXP, SEXP paSEXP, SEXP pwSEXP, SEXP pbaSEXP, SEXP pnregSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type py(pySEXP);
    Rcpp::traits::input_parameter< SEXP >::type px(pxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pgrpinds(pgrpindsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pid(pidSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmcreturn(pmcmcreturnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pburnin(pburninSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmc(pmcmcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pa(paSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pba(pbaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pnreg(pnregSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcpR(py, px, pgrpinds, pid, pmcmcreturn, pburnin, pmcmc, pa, pw, pba, pnreg));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bcpM
SEXP rcpp_bcpM(SEXP pdata, SEXP pid, SEXP pmcmcreturn, SEXP pburnin, SEXP pmcmc, SEXP pa, SEXP pw);
RcppExport SEXP _bcp_rcpp_bcpM(SEXP pdataSEXP, SEXP pidSEXP, SEXP pmcmcreturnSEXP, SEXP pburninSEXP, SEXP pmcmcSEXP, SEXP paSEXP, SEXP pwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pdata(pdataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pid(pidSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmcreturn(pmcmcreturnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pburnin(pburninSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmc(pmcmcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pa(paSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pw(pwSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bcpM(pdata, pid, pmcmcreturn, pburnin, pmcmc, pa, pw));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_ppm
SEXP rcpp_ppm(SEXP pdata, SEXP pid, SEXP padj, SEXP pmcmcreturn, SEXP pburnin, SEXP pmcmc, SEXP pa, SEXP pc, SEXP pmembs, SEXP pboundaryType, SEXP p1, SEXP pfreqAPP);
RcppExport SEXP _bcp_rcpp_ppm(SEXP pdataSEXP, SEXP pidSEXP, SEXP padjSEXP, SEXP pmcmcreturnSEXP, SEXP pburninSEXP, SEXP pmcmcSEXP, SEXP paSEXP, SEXP pcSEXP, SEXP pmembsSEXP, SEXP pboundaryTypeSEXP, SEXP p1SEXP, SEXP pfreqAPPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pdata(pdataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pid(pidSEXP);
    Rcpp::traits::input_parameter< SEXP >::type padj(padjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmcreturn(pmcmcreturnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pburnin(pburninSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmc(pmcmcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pa(paSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmembs(pmembsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pboundaryType(pboundaryTypeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type pfreqAPP(pfreqAPPSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_ppm(pdata, pid, padj, pmcmcreturn, pburnin, pmcmc, pa, pc, pmembs, pboundaryType, p1, pfreqAPP));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_ppmR
SEXP rcpp_ppmR(SEXP py, SEXP px, SEXP pgrpinds, SEXP pid, SEXP padj, SEXP pmcmcreturn, SEXP pburnin, SEXP pmcmc, SEXP pa, SEXP pc, SEXP pmembs, SEXP pboundaryType, SEXP pba, SEXP p1, SEXP pfreqAPP, SEXP pnreg);
RcppExport SEXP _bcp_rcpp_ppmR(SEXP pySEXP, SEXP pxSEXP, SEXP pgrpindsSEXP, SEXP pidSEXP, SEXP padjSEXP, SEXP pmcmcreturnSEXP, SEXP pburninSEXP, SEXP pmcmcSEXP, SEXP paSEXP, SEXP pcSEXP, SEXP pmembsSEXP, SEXP pboundaryTypeSEXP, SEXP pbaSEXP, SEXP p1SEXP, SEXP pfreqAPPSEXP, SEXP pnregSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type py(pySEXP);
    Rcpp::traits::input_parameter< SEXP >::type px(pxSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pgrpinds(pgrpindsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pid(pidSEXP);
    Rcpp::traits::input_parameter< SEXP >::type padj(padjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmcreturn(pmcmcreturnSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pburnin(pburninSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmcmc(pmcmcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pa(paSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pmembs(pmembsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pboundaryType(pboundaryTypeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pba(pbaSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< SEXP >::type pfreqAPP(pfreqAPPSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pnreg(pnregSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_ppmR(py, px, pgrpinds, pid, padj, pmcmcreturn, pburnin, pmcmc, pa, pc, pmembs, pboundaryType, pba, p1, pfreqAPP, pnreg));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bcp_rcpp_bcpR", (DL_FUNC) &_bcp_rcpp_bcpR, 11},
    {"_bcp_rcpp_bcpM", (DL_FUNC) &_bcp_rcpp_bcpM, 7},
    {"_bcp_rcpp_ppm", (DL_FUNC) &_bcp_rcpp_ppm, 12},
    {"_bcp_rcpp_ppmR", (DL_FUNC) &_bcp_rcpp_ppmR, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_bcp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
