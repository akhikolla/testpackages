// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rDirichlet
NumericVector rDirichlet(const NumericVector& migrationPoint);
RcppExport SEXP _MGDrivE_rDirichlet(SEXP migrationPointSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type migrationPoint(migrationPointSEXP);
    rcpp_result_gen = Rcpp::wrap(rDirichlet(migrationPoint));
    return rcpp_result_gen;
END_RCPP
}
// quantileC
NumericMatrix quantileC(const IntegerMatrix& Trials, const NumericVector& Probs);
RcppExport SEXP _MGDrivE_quantileC(SEXP TrialsSEXP, SEXP ProbsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type Trials(TrialsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Probs(ProbsSEXP);
    rcpp_result_gen = Rcpp::wrap(quantileC(Trials, Probs));
    return rcpp_result_gen;
END_RCPP
}
// calcCos
Rcpp::NumericMatrix calcCos(const Rcpp::NumericMatrix& latLongs, const double& r);
RcppExport SEXP _MGDrivE_calcCos(SEXP latLongsSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type latLongs(latLongsSEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(calcCos(latLongs, r));
    return rcpp_result_gen;
END_RCPP
}
// calcHaversine
Rcpp::NumericMatrix calcHaversine(const Rcpp::NumericMatrix& latLongs, const double& r);
RcppExport SEXP _MGDrivE_calcHaversine(SEXP latLongsSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type latLongs(latLongsSEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(calcHaversine(latLongs, r));
    return rcpp_result_gen;
END_RCPP
}
// calcVinSph
Rcpp::NumericMatrix calcVinSph(const Rcpp::NumericMatrix& latLongs, const double& r);
RcppExport SEXP _MGDrivE_calcVinSph(SEXP latLongsSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type latLongs(latLongsSEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(calcVinSph(latLongs, r));
    return rcpp_result_gen;
END_RCPP
}
// calcVinEll
Rcpp::NumericMatrix calcVinEll(const Rcpp::NumericMatrix& latLongs, const double& a, const double& b, const double& f, const double& eps, const double& iter);
RcppExport SEXP _MGDrivE_calcVinEll(SEXP latLongsSEXP, SEXP aSEXP, SEXP bSEXP, SEXP fSEXP, SEXP epsSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type latLongs(latLongsSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    Rcpp::traits::input_parameter< const double& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const double& >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(calcVinEll(latLongs, a, b, f, eps, iter));
    return rcpp_result_gen;
END_RCPP
}
// calcLognormalKernel
Rcpp::NumericMatrix calcLognormalKernel(const Rcpp::NumericMatrix& distMat, const double& meanlog, const double& sdlog);
RcppExport SEXP _MGDrivE_calcLognormalKernel(SEXP distMatSEXP, SEXP meanlogSEXP, SEXP sdlogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type distMat(distMatSEXP);
    Rcpp::traits::input_parameter< const double& >::type meanlog(meanlogSEXP);
    Rcpp::traits::input_parameter< const double& >::type sdlog(sdlogSEXP);
    rcpp_result_gen = Rcpp::wrap(calcLognormalKernel(distMat, meanlog, sdlog));
    return rcpp_result_gen;
END_RCPP
}
// calcGammaKernel
Rcpp::NumericMatrix calcGammaKernel(const Rcpp::NumericMatrix& distMat, const double& shape, const double& rate);
RcppExport SEXP _MGDrivE_calcGammaKernel(SEXP distMatSEXP, SEXP shapeSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type distMat(distMatSEXP);
    Rcpp::traits::input_parameter< const double& >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< const double& >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(calcGammaKernel(distMat, shape, rate));
    return rcpp_result_gen;
END_RCPP
}
// calcExpKernel
Rcpp::NumericMatrix calcExpKernel(const Rcpp::NumericMatrix& distMat, const double& rate);
RcppExport SEXP _MGDrivE_calcExpKernel(SEXP distMatSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type distMat(distMatSEXP);
    Rcpp::traits::input_parameter< const double& >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(calcExpKernel(distMat, rate));
    return rcpp_result_gen;
END_RCPP
}
// calcHurdleExpKernel
Rcpp::NumericMatrix calcHurdleExpKernel(const Rcpp::NumericMatrix& distMat, const double& rate, const double& p0);
RcppExport SEXP _MGDrivE_calcHurdleExpKernel(SEXP distMatSEXP, SEXP rateSEXP, SEXP p0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type distMat(distMatSEXP);
    Rcpp::traits::input_parameter< const double& >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< const double& >::type p0(p0SEXP);
    rcpp_result_gen = Rcpp::wrap(calcHurdleExpKernel(distMat, rate, p0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MGDrivE_rDirichlet", (DL_FUNC) &_MGDrivE_rDirichlet, 1},
    {"_MGDrivE_quantileC", (DL_FUNC) &_MGDrivE_quantileC, 2},
    {"_MGDrivE_calcCos", (DL_FUNC) &_MGDrivE_calcCos, 2},
    {"_MGDrivE_calcHaversine", (DL_FUNC) &_MGDrivE_calcHaversine, 2},
    {"_MGDrivE_calcVinSph", (DL_FUNC) &_MGDrivE_calcVinSph, 2},
    {"_MGDrivE_calcVinEll", (DL_FUNC) &_MGDrivE_calcVinEll, 6},
    {"_MGDrivE_calcLognormalKernel", (DL_FUNC) &_MGDrivE_calcLognormalKernel, 3},
    {"_MGDrivE_calcGammaKernel", (DL_FUNC) &_MGDrivE_calcGammaKernel, 3},
    {"_MGDrivE_calcExpKernel", (DL_FUNC) &_MGDrivE_calcExpKernel, 2},
    {"_MGDrivE_calcHurdleExpKernel", (DL_FUNC) &_MGDrivE_calcHurdleExpKernel, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MGDrivE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
