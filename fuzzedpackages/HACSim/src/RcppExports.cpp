// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// accumulate
arma::Cube<int> accumulate(const arma::Cube<int>& pop, const IntegerVector& specs, int perms, int K);
RcppExport SEXP _HACSim_accumulate(SEXP popSEXP, SEXP specsSEXP, SEXP permsSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<int>& >::type pop(popSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type specs(specsSEXP);
    Rcpp::traits::input_parameter< int >::type perms(permsSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(accumulate(pop, specs, perms, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HACSim_accumulate", (DL_FUNC) &_HACSim_accumulate, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_HACSim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
