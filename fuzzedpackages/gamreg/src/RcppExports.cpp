// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// gam_reg
List gam_reg(arma::mat X, arma::mat Y, arma::mat beta, double beta0, double sigma, double lambda, double gam, Rcpp::Function f, int inter, double regul_alp);
RcppExport SEXP _gamreg_gam_reg(SEXP XSEXP, SEXP YSEXP, SEXP betaSEXP, SEXP beta0SEXP, SEXP sigmaSEXP, SEXP lambdaSEXP, SEXP gamSEXP, SEXP fSEXP, SEXP interSEXP, SEXP regul_alpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< int >::type inter(interSEXP);
    Rcpp::traits::input_parameter< double >::type regul_alp(regul_alpSEXP);
    rcpp_result_gen = Rcpp::wrap(gam_reg(X, Y, beta, beta0, sigma, lambda, gam, f, inter, regul_alp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gamreg_gam_reg", (DL_FUNC) &_gamreg_gam_reg, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_gamreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
