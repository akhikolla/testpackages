export(backVarElimination_Bin)
export(backVarElimination_Res)
export(baggedModel)
export(bootstrapValidation_Bin)
export(bootstrapValidation_Res)
export(bootstrapVarElimination_Bin)
export(bootstrapVarElimination_Res)
export(crossValidationFeatureSelection_Bin)
export(crossValidationFeatureSelection_Res)
export(featureAdjustment)
export(ForwardSelection.Model.Bin)
export(ForwardSelection.Model.Res)
export(FRESA.Model)
export(getKNNpredictionFromFormula)
export(getSignature) 
export(getVar.Bin)
export(getVar.Res)
export(heatMaps)
export(improvedResiduals)
export(listTopCorrelatedVariables)
export(ensemblePredict) 
export(modelFitting)
export(plotModels.ROC)
export(predict.fitFRESA)
export(rankInverseNormalDataFrame)
export(reportEquivalentVariables)
export(residualForFRESA)
export(signatureDistance)
export(summaryReport)
export(uniRankVar)
export(univariateRankVariables)
export(updateModel.Bin)
export(updateModel.Res)
export(timeSerieAnalysis)
export(summary.fitFRESA)
export(BSWiMS.model)
export(nearestNeighborImpute)
export(EmpiricalSurvDiff)
export(randomCV)
export(BESS)
export(BESS_GSECTION)
export(LASSO_MIN)
export(LASSO_1SE)
export(predict.FRESA_GLMNET)
export(univariate_Logit)
export(univariate_residual)
export(univariate_Wilcoxon)
export(univariate_tstudent)
export(univariate_correlation)
export(correlated_Remove)
export(KNN_method)
export(predict.FRESAKNN)
export(FRESAScale)
export(CVsignature)
export(predict.FRESAsignature)
export(NAIVE_BAYES)
export(predict.FRESA_NAIVEBAYES) 
export(TUNED_SVM)
export(predict.FRESA_SVM) 
export(LM_RIDGE_MIN)
export(predict.FRESA_RIDGE) 
export(mRMR.classic_FRESA)
export(BinaryBenchmark)
export(RegresionBenchmark)
export(OrdinalBenchmark)
export(CoxBenchmark)
export(barPlotCiError)
export(predictionStats_binary)
export(predictionStats_ordinal)
export(predictionStats_regression)
export(predictionStats_survival)
export(HLCM)
export(HLCM_EM)
export(predict.FRESA_HLCM)
export(GMVEBSWiMS)
export(predict.GMVE_BSWiMS)
export(ClustClass)
export(predict.CLUSTER_CLASS)
export(GMVECluster)
export(clusterISODATA)
export(jaccardMatrix)
export(nearestCentroid)
export(predict.GMVE)
export(trajectoriesPolyFeatures)
export(predict.FRESA_BESS)
export(GLMNET)
export(GLMNET_ELASTICNET_MIN)
export(GLMNET_RIDGE_MIN)
export(univariate_cox)
export(filteredFit)
export(predict.FRESA_FILTERFIT);

useDynLib(FRESA.CAD,.registration = TRUE)

import(stringr,miscTools,Hmisc,pROC)

S3method(plot, bootstrapValidation_Bin)
S3method(plot, bootstrapValidation_Res)
S3method(plot, FRESA_benchmark)
S3method(summary, bootstrapValidation_Bin)
S3method(update, uniRankVar)
S3method(summary, fitFRESA)
S3method(predict, fitFRESA)
S3method(predict, FRESA_GLMNET)
S3method(predict, FRESAKNN)
S3method(predict, FRESAsignature)
S3method(predict, FRESA_NAIVEBAYES)
S3method(predict, FRESA_RIDGE) 
S3method(predict, FRESA_SVM) 
S3method(predict, FRESA_HLCM) 
S3method(predict, GMVE_BSWiMS)
S3method(predict, CLUSTER_CLASS)
S3method(predict, GMVE)
S3method(predict, FRESA_BESS)
S3method(predict, FRESA_FILTERFIT) 


importFrom(Rcpp, evalCpp)
importFrom("graphics", "abline", "barplot", "boxplot", "legend","lines", "par", "plot", "title")
importFrom("stats", "binom.test", "binomial", "coef", "cor.test","IQR",
     "ecdf", "formula", "ks.test", "lm", "model.frame",
     "model.matrix", "na.exclude", "na.omit", "pf", "pnorm",
     "predict", "qnorm", "quantile", "rnorm", "sd", "t.test",
     "terms", "wilcox.test", "glm", "median", "weighted.mean", 
	 "runif", "p.adjust", "lowess", "complete.cases","pchisq","qchisq")
importFrom("stats", "na.pass")
importFrom("stats", "density")
importFrom("stats", "cor")
importFrom("stats", "qt")
importFrom("utils", "install.packages")
importFrom("utils", "hasName")
importFrom("grDevices", "colorRampPalette")
importFrom("grDevices", "heat.colors")
importFrom("grDevices", "terrain.colors")
importFrom("graphics", "axis", "grconvertX", "grconvertY", "hist", "rect")
importFrom("graphics", "text")
importFrom("graphics", "arrows")
importFrom("graphics", "layout")
importFrom("stats", "as.formula")
importFrom("utils", "head")
importFrom("stats", "mahalanobis")
importFrom("graphics", "points")
importFrom("stats", "prcomp")
importFrom("stats", "filter")


