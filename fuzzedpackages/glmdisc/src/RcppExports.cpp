// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// predictlogisticRegression
Eigen::VectorXd predictlogisticRegression(const Eigen::MatrixXd test, const Eigen::VectorXd parameters);
RcppExport SEXP _glmdisc_predictlogisticRegression(SEXP testSEXP, SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type test(testSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(predictlogisticRegression(test, parameters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_glmdisc_predictlogisticRegression", (DL_FUNC) &_glmdisc_predictlogisticRegression, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_glmdisc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
