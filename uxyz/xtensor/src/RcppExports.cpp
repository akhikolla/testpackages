// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/xtensor.h"
#include <Rcpp.h>

using namespace Rcpp;

// test_add_cpp
xt::rarray<double> test_add_cpp(xt::rarray<double>& x, xt::rarray<double>& y);
RcppExport SEXP _xtensor_test_add_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< xt::rarray<double>& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(test_add_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// test_in_place_modify_cpp
int test_in_place_modify_cpp(xt::rarray<double>& x);
RcppExport SEXP _xtensor_test_in_place_modify_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_in_place_modify_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// test_roundtrip_rarray_optional
xt::rarray_optional<double> test_roundtrip_rarray_optional(xt::rarray_optional<double> x);
RcppExport SEXP _xtensor_test_roundtrip_rarray_optional(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray_optional<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_roundtrip_rarray_optional(x));
    return rcpp_result_gen;
END_RCPP
}
// test_roundtrip_rtensor_optional
xt::rtensor_optional<double, 2> test_roundtrip_rtensor_optional(xt::rtensor_optional<double, 2> x);
RcppExport SEXP _xtensor_test_roundtrip_rtensor_optional(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rtensor_optional<double, 2> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_roundtrip_rtensor_optional(x));
    return rcpp_result_gen;
END_RCPP
}
// test_reshape_cpp
int test_reshape_cpp(xt::rarray<double>& x);
RcppExport SEXP _xtensor_test_reshape_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_reshape_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// test_int_cpp
int test_int_cpp(xt::rarray<int>& x);
RcppExport SEXP _xtensor_test_int_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<int>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_int_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// test_lgl_cpp
int test_lgl_cpp(xt::rarray<rlogical>& x);
RcppExport SEXP _xtensor_test_lgl_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<rlogical>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_lgl_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// test_stdcomplex_cpp
int test_stdcomplex_cpp(xt::rarray<std::complex<double>>& x);
RcppExport SEXP _xtensor_test_stdcomplex_cpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rarray<std::complex<double>>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test_stdcomplex_cpp(x));
    return rcpp_result_gen;
END_RCPP
}
// xtensor_r_example
xt::rtensor<double, 2> xtensor_r_example(xt::rtensor<int, 1> tens);
RcppExport SEXP _xtensor_xtensor_r_example(SEXP tensSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< xt::rtensor<int, 1> >::type tens(tensSEXP);
    rcpp_result_gen = Rcpp::wrap(xtensor_r_example(tens));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xtensor_test_add_cpp", (DL_FUNC) &_xtensor_test_add_cpp, 2},
    {"_xtensor_test_in_place_modify_cpp", (DL_FUNC) &_xtensor_test_in_place_modify_cpp, 1},
    {"_xtensor_test_roundtrip_rarray_optional", (DL_FUNC) &_xtensor_test_roundtrip_rarray_optional, 1},
    {"_xtensor_test_roundtrip_rtensor_optional", (DL_FUNC) &_xtensor_test_roundtrip_rtensor_optional, 1},
    {"_xtensor_test_reshape_cpp", (DL_FUNC) &_xtensor_test_reshape_cpp, 1},
    {"_xtensor_test_int_cpp", (DL_FUNC) &_xtensor_test_int_cpp, 1},
    {"_xtensor_test_lgl_cpp", (DL_FUNC) &_xtensor_test_lgl_cpp, 1},
    {"_xtensor_test_stdcomplex_cpp", (DL_FUNC) &_xtensor_test_stdcomplex_cpp, 1},
    {"_xtensor_xtensor_r_example", (DL_FUNC) &_xtensor_xtensor_r_example, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_xtensor(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
