// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_dkwcwg
NumericVector cpp_dkwcwg(const NumericVector& vx, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb, const bool& log_prob);
RcppExport SEXP _elfDistr_cpp_dkwcwg(SEXP vxSEXP, SEXP valphaSEXP, SEXP vbetaSEXP, SEXP vgammaSEXP, SEXP vaSEXP, SEXP vbSEXP, SEXP log_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type vx(vxSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type valpha(valphaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vbeta(vbetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vgamma(vgammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type va(vaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vb(vbSEXP);
    Rcpp::traits::input_parameter< const bool& >::type log_prob(log_probSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_dkwcwg(vx, valpha, vbeta, vgamma, va, vb, log_prob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_pkwcwg
NumericVector cpp_pkwcwg(const NumericVector& vx, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb, const bool& lower_tail, const bool& log_prob);
RcppExport SEXP _elfDistr_cpp_pkwcwg(SEXP vxSEXP, SEXP valphaSEXP, SEXP vbetaSEXP, SEXP vgammaSEXP, SEXP vaSEXP, SEXP vbSEXP, SEXP lower_tailSEXP, SEXP log_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type vx(vxSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type valpha(valphaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vbeta(vbetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vgamma(vgammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type va(vaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vb(vbSEXP);
    Rcpp::traits::input_parameter< const bool& >::type lower_tail(lower_tailSEXP);
    Rcpp::traits::input_parameter< const bool& >::type log_prob(log_probSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_pkwcwg(vx, valpha, vbeta, vgamma, va, vb, lower_tail, log_prob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_qkwcwg
NumericVector cpp_qkwcwg(const NumericVector& vp, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb, const bool& lower_tail, const bool& log_prob);
RcppExport SEXP _elfDistr_cpp_qkwcwg(SEXP vpSEXP, SEXP valphaSEXP, SEXP vbetaSEXP, SEXP vgammaSEXP, SEXP vaSEXP, SEXP vbSEXP, SEXP lower_tailSEXP, SEXP log_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type valpha(valphaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vbeta(vbetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vgamma(vgammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type va(vaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vb(vbSEXP);
    Rcpp::traits::input_parameter< const bool& >::type lower_tail(lower_tailSEXP);
    Rcpp::traits::input_parameter< const bool& >::type log_prob(log_probSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_qkwcwg(vp, valpha, vbeta, vgamma, va, vb, lower_tail, log_prob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_rkwcwg
NumericVector cpp_rkwcwg(const int& n, const NumericVector& valpha, const NumericVector& vbeta, const NumericVector& vgamma, const NumericVector& va, const NumericVector& vb);
RcppExport SEXP _elfDistr_cpp_rkwcwg(SEXP nSEXP, SEXP valphaSEXP, SEXP vbetaSEXP, SEXP vgammaSEXP, SEXP vaSEXP, SEXP vbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type valpha(valphaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vbeta(vbetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vgamma(vgammaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type va(vaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vb(vbSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_rkwcwg(n, valpha, vbeta, vgamma, va, vb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_elfDistr_cpp_dkwcwg", (DL_FUNC) &_elfDistr_cpp_dkwcwg, 7},
    {"_elfDistr_cpp_pkwcwg", (DL_FUNC) &_elfDistr_cpp_pkwcwg, 8},
    {"_elfDistr_cpp_qkwcwg", (DL_FUNC) &_elfDistr_cpp_qkwcwg, 8},
    {"_elfDistr_cpp_rkwcwg", (DL_FUNC) &_elfDistr_cpp_rkwcwg, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_elfDistr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
